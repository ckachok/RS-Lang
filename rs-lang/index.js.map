{"version":3,"file":"index.js","mappings":";mBAoBA,QApBA,WAGE,WAAYA,EAAgCC,EAAiBC,EAAgBC,QAAjC,IAAAF,IAAAA,EAAA,YAAiB,IAAAC,IAAAA,EAAA,SAAgB,IAAAC,IAAAA,EAAA,IAC3E,IAAMC,EAAUC,SAASC,cAAcL,GACvCG,EAAQF,UAAYA,EACpBE,EAAQG,YAAcJ,EAElBH,GACFA,EAAWQ,OAAOJ,GAGpBK,KAAKC,KAAON,EAMhB,OAHE,YAAAO,QAAA,WACEF,KAAKC,KAAKE,UAEd,EAlBA,GCiCA,EAjCkB,CAChBC,KAAM,CACJC,KAAM,UACNC,KAAM,QACNC,GAAI,aAENC,SAAU,CACRH,KAAM,sBACNC,KAAM,YACNC,GAAI,iBAENE,UAAW,CACTJ,KAAM,aACNC,KAAM,cACNC,GAAI,mBAENG,OAAQ,CACNL,KAAM,SACNC,KAAM,UACNC,GAAI,eAENI,WAAY,CACVN,KAAM,aACNC,KAAM,cACNC,GAAI,mBAENK,UAAW,CACTP,KAAM,YACNC,KAAM,cACNC,GAAI,6dCXR,QAbA,YACE,WAAYhB,EAAyBC,EAAiBC,GAAtD,MACE,YAAMF,EAAYC,EAASC,IAAU,YACrC,EAAKoB,aACL,EAAKZ,KAAKa,KAAO,cAOrB,OAXmB,OAOT,YAAAD,WAAR,WACoB,IAAI,EAAgCb,KAAKC,KAAM,MAAO,mBACvD,IAAI,EAA2BD,KAAKC,KAAM,OAAQ,iBCdrD,YDgBlB,EAXA,CAAmB,GEAnB,EAJQ,QAIR,EAHa,ICAb,IAAMc,EAAoB,CAAC,WAAY,YAAa,mBAAoB,UAU3DC,EAAmB,WAC9B,MAAO,CACLC,oBAAqBC,aAAaC,QAAQ,uBAAyB,EACnEC,eAAgBF,aAAaC,QAAQ,kBAAoB,EACzDE,eAAgB,KChBPC,EAAa,eAAC,sDACzBC,EAASC,SAAQ,SAAAC,GACfA,EAAKC,UAAUC,IAAI,cAIVC,EAAe,eAAC,sDAC3BL,EAASC,SAAQ,SAAAC,GACfA,EAAKC,UAAUvB,OAAO,weCyH1B,QAxHA,YASE,WAAYZ,EAAyBC,EAAiBC,GAAtD,MACE,YAAMF,EAAYC,EAASC,IAAU,YACrC,EAAKoC,iBA2GT,OAtHqB,OAcX,YAAAC,kBAAR,SAA0BvC,EAAyBwC,GACjD/B,KAAKgC,QAAU,IAAI,EAAczC,EAAY,OAAQ,iBAAiBU,KAElE8B,IACF/B,KAAKgC,QAAQC,UAAY,WAAWF,EAAQ,IAC5CT,EAAWtB,KAAKgC,WAIZ,YAAAE,kBAAR,SAA0B3C,GACxB,IAAM4C,EAAmB,IAAI,EAAc5C,EAAY,MAAO,2BAA2BU,KACzFD,KAAKoC,QAAU,IAAI,EAAcD,EAAkB,SAAU,2BAA2BlC,KACxFD,KAAKqC,UAAY,IAAI,EAAcF,EAAkB,SAAU,4BAA6B,GAAkBlC,MAGxG,YAAAqC,mBAAR,SAA2BP,GAA3B,WACE/B,KAAKoC,QAAQG,iBAAiB,SAAS,WACrC,GAAIR,EAKF,OAJAT,EAAW,EAAKe,gBAChBG,YAAW,WACTZ,EAAa,EAAKS,aACjB,GAIL,EAAKI,mBAID,YAAAC,qBAAR,WACE1C,KAAKqC,UAAUE,iBAAiB,SAAS,WF5C3CxB,EAAkBS,SAAQ,SAAAmB,GAAO,OAAAzB,aAAa0B,WAAWD,ME8CrDE,OAAOC,SAASxC,KAAOuC,OAAOC,SAASxC,OAAS,YAAsB,IAAM,gBAIxE,YAAAyC,WAAR,SAAmBxD,EAAyBwC,GAC1C,IAAMiB,EAAO,IAAI,EAAczD,EAAY,MAAO,QAAQU,KAC1DD,KAAK8B,kBAAkBkB,EAAMjB,GAC7B/B,KAAKkC,kBAAkBc,GACvBhD,KAAKsC,mBAAmBP,GACxB/B,KAAK0C,wBAGC,YAAAO,aAAR,WACMjD,KAAKkD,WAAWxB,UAAUyB,SAAS,UACrCvB,EAAa5B,KAAKkD,WAAYlD,KAAKoD,MAEnC9B,EAAWtB,KAAKkD,WAAYlD,KAAKoD,OAI7B,YAAAC,sBAAR,sBACErD,KAAKkD,WAAWX,iBAAiB,SAAS,WACxC,EAAKU,eACL,EAAKK,mBAID,YAAAC,iBAAR,SAAyBhE,GACvBS,KAAKkD,WAAa,IAAI,EAAc3D,EAAY,SAAU,eAAeU,KACjD,IAAI,EAAcD,KAAKkD,WAAY,OAAQ,sBACnElD,KAAKqD,yBAGC,YAAAG,wBAAR,SAAgCC,EAA6BC,GAC3D,IAAMC,EAAed,OAAOC,SAASxC,KAEjCqD,IAAiBF,EAASnD,KAC5BgB,EAAWmC,GACDE,GAAgBD,EAAarD,OAAS,aAChDiB,EAAWmC,IAIP,YAAAG,eAAR,SAAuBrE,EAAyBwC,GAAhD,WACQ8B,EAAW,IAAI,EAActE,EAAY,KAAM,cAAcU,KAClD6D,OAAOC,OAAO,GACtBvC,SAAQ,SAAAkC,GACf,IAAMM,EAAW,IAAI,EAAcH,EAAU,KAAM,cAAc5D,KAC3DwD,EAAW,IAAI,EAAiCO,EAAU,IAAK,aAAcN,EAAarD,MAAMJ,KACtGwD,EAAS3C,KAAO4C,EAAapD,KAEzByB,GAAY2B,EAAarD,OAAS,mBACpCiB,EAAW0C,GAGb,EAAKR,wBAAwBC,EAAUC,OAInC,YAAAO,WAAR,SAAmB1E,EAAyBwC,GAC1C/B,KAAKoD,KAAO,IAAI,EAAc7D,EAAY,MAAO,QAAQU,KACzDD,KAAK4D,eAAe5D,KAAKoD,KAAMrB,IAGzB,YAAAF,aAAR,WACE,IAAME,EAAWb,aAAaC,QAAQ,YAChC+C,EAAkB,IAAI,EAAclE,KAAKC,KAAM,MAAO,+BAA+BA,KAC9E,IAAI,EAAKiE,EAAiB,IAAK,YAC5ClE,KAAK+C,WAAWmB,EAAiBnC,GACjC/B,KAAKuD,iBAAiBW,GACtBlE,KAAKiE,WAAWC,EAAiBnC,IAErC,EAtHA,CAAqB,ieCGrB,QARA,YACE,WAAYxC,EAAyBC,EAAiBC,GAAtD,MACE,YAAMF,EAAYC,EAASC,IAAU,YACrC,EAAKQ,KAAKa,KCPa,wBDQvB,EAAKb,KAAKkE,OAAS,WAEvB,OAN2B,OAM3B,EANA,CAA2B,GEJpB,IAAMC,EAAe,CAAC,UAAW,SAAU,mBAErCC,EAAc,gfC+B3B,QA5BA,YAGE,WAAY9E,EAAyBC,EAAiBC,GAAtD,MACE,YAAMF,EAAYC,EAASC,IAAU,YACrC,EAAK6E,iBAqBT,OA1BqB,OAQX,YAAAC,cAAR,SAAsBhF,GACpB,IAAMiF,EAAU,IAAI,EAAcjF,EAAY,MAAO,YAAYU,KAG3DwE,GAFO,IAAI,EAAcD,EAAS,OAAQ,iBAAkB,QAC/C,IAAI,EAAcA,EAAS,MAAO,yBAClC,IAAI,EAAcA,EAAS,MAAO,wBAAwBvE,MAE7EmE,EAAa5C,SAAQ,SAAAnB,GACnB,IAAMqE,EAAgB,IAAI,EAAiCD,EAAY,IAAK,sBAAuBpE,GACnGqE,EAAczE,KAAKa,KAAOuD,EAAchE,EACxCqE,EAAczE,KAAKkE,OAAS,aAIxB,YAAAG,aAAR,WACEtE,KAAK2E,gBAAkB,IAAI,EAAc3E,KAAKC,KAAM,MAAO,+BACtC,IAAI,EAAaD,KAAK2E,gBAAgB1E,KAAM,IAAK,iBACtED,KAAKuE,cAAcvE,KAAK2E,gBAAgB1E,OAE5C,EA1BA,CAAqB,ieCcrB,QAhBA,YAGE,WAAYV,EAAyBC,EAAiBC,GAAtD,MACE,YAAMF,EAAYC,EAASC,IAAU,YACrC,EAAKmF,qBAST,OAdoB,OAQV,YAAAA,iBAAR,sBACE5E,KAAKC,KAAKsC,iBAAiB,SAAS,WAClC,EAAKtC,KAAKyB,UAAUvB,OAAO,UAC3B,EAAK0E,cAGX,EAdA,CAAoB,o1CCaPC,EAAO,iDAEdC,EACG,SADHA,EAEG,SAFHA,EAKc,mBAGdC,EAIO,+CAGb,aAIE,aACEhF,KAAKiF,MAAQ/D,aAAaC,QAAQ,aAClCnB,KAAKkF,aAAehE,aAAaC,QAAQ,oBAgO7C,OA7Ne,YAAAgE,SAAb,SAAsBC,EAAeC,6FACtB,SAAMC,MAAM,GAAGR,EAAH,gBAAkCM,EAAK,SAASC,WACzE,MAAO,CAAP,EADa,SACDE,gBAGD,YAAAC,QAAb,SAAqBjF,6FACN,SAAM+E,MAAM,GAAGR,EAAH,UAA4BvE,WACrD,MAAO,CAAP,EADa,SACDgF,gBAGD,YAAAE,gBAAb,SAA6BC,uGACd,SAAMJ,MAAM,GAAGR,EAAOC,EAAkB,CACnDY,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,oBAGA,OATjBO,EAAO,UASDC,OAAL,OAAsB,GAAEC,MAnCvB,+EAmC4D,eAAMF,EAAKV,eAApB,EAAAa,QAAS,WAAiB,mBAArF,MAAO,CAAP,aAGW,YAAAC,cAAb,SAA2BX,qGACZ,SAAMJ,MAASR,EA7CtB,UA6CgD,CACpDa,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,aAGvB,OAAoB,OATdO,EAAO,UASJC,OACA,CAAP,EAAO,CAAEC,MAhDI,iEAmDK,MAAhBF,EAAKC,OACA,CAAP,EAAO,CAAEC,MAnDO,2CAsDA,GAAMF,EAAKV,gBAA7B,MAAO,CAAP,GAAS,EAAAa,QAAS,SAAiB,YAGxB,YAAAE,gBAAb,SAA6BC,mGACd,SAAMjB,MAAM,GAAGR,EAAH,UAA4ByB,EAjE/C,UAiE2E,CAC/EZ,OAAQ,MACRC,QAAS,CACPY,cAAe,UAAUxG,KAAKkF,aAC9BW,OAAQ,8BAGkB,SAPjB,SAO4BN,sBAAnCkB,EAAwB,SAC9BvF,aAAawF,QAAQ,YAAaD,EAAUxB,OAC5C/D,aAAawF,QAAQ,mBAAoBD,EAAUvB,0BAGxC,YAAAyB,QAAb,SAAqBJ,mGACN,SAAMjB,MAAM,GAAGR,EAAH,UAA4ByB,EAAU,CAC7DZ,OAAQ,MACRC,QAAS,CACPY,cAAe,UAAUxG,KAAKiF,MAC9BY,OAAQ,qCAIQ,OARdI,EAAO,UAQJC,OAAL,MACF,GAAMlG,KAAKsG,gBAAgBC,WAC3B,OADA,SACA,IAAM,IAAIK,GAAgBD,QAAQJ,WAAlC,0BAGF,MAAO,CAAP,EAAON,EAAKV,gBAGD,YAAAsB,eAAb,SAA4BN,EAAgBO,EAAgBC,6FAC7C,SAAMzB,MAAM,GAAGR,EAAH,UAA4ByB,EAA5B,UAAuDO,EAAU,CACxFnB,OAAQ,OACRC,QAAS,CACPY,cAAe,UAAUxG,KAAKiF,MAC9BY,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUe,oBAGH,MAVP,SAUJb,OAAL,MACF,GAAMlG,KAAKsG,gBAAgBC,WAC3B,OADA,SACA,IAAM,IAAIK,GAAgBC,eAAeN,EAAQO,EAAQC,WAAzD,4CAIS,YAAAC,YAAb,SAAyBT,EAAgBO,qGAC1B,SAAMxB,MAAM,GAAGR,EAAH,UAA4ByB,EAA5B,UAAuDO,EAAU,CACxFnB,OAAQ,MACRC,QAAS,CACPY,cAAe,UAAUxG,KAAKiF,MAC9BY,OAAQ,qCAIQ,OARdI,EAAO,UAQJC,OAAL,MACF,GAAMlG,KAAKsG,gBAAgBC,WAC3B,OADA,SACA,IAAM,IAAIK,GAAgBI,YAAYT,EAAQO,WAA9C,0BAGF,OAAoB,MAAhBb,EAAKC,OACA,CAAP,EAAO,CAAEC,MAAOnB,IAGe,GAAMiB,EAAKV,eAC5C,MAAO,CAAP,EAAO,CAAEa,QAAS,CAAEa,YADdC,EAA2B,UACID,WAAYE,SAAUD,EAAKC,oBAGrD,YAAAC,eAAb,SAA4Bb,EAAgBO,EAAgBC,6FAC7C,SAAMzB,MAAM,GAAGR,EAAH,UAA4ByB,EAA5B,UAAuDO,EAAU,CACxFnB,OAAQ,MACRC,QAAS,CACPY,cAAe,UAAUxG,KAAKiF,MAC9BY,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUe,oBAGH,MAVP,SAUJb,OAAL,MACF,GAAMlG,KAAKsG,gBAAgBC,WAC3B,OADA,SACA,IAAM,IAAIK,GAAgBQ,eAAeb,EAAQO,EAAQC,WAAzD,4CAIS,YAAAM,eAAb,SAA4Bd,EAAgBO,6FAC7B,SAAMxB,MAAM,GAAGR,EAAH,UAA4ByB,EAA5B,UAAuDO,EAAU,CACxFnB,OAAQ,SACRC,QAAS,CACPY,cAAe,UAAUxG,KAAKiF,MAC9BY,OAAQ,qCAIQ,MARP,SAQJK,OAAL,MACF,GAAMlG,KAAKsG,gBAAgBC,WAC3B,OADA,SACA,IAAM,IAAIK,GAAgBS,eAAed,EAAQO,WAAjD,4CAII,YAAAQ,mBAAR,SAA2BC,EAAkCR,GAC3DQ,EAAaN,WAAaF,EAASE,YAAcM,EAAaN,WAC9DM,EAAaJ,SAASK,UAAYT,EAASI,SAASK,WAAaD,EAAaJ,SAASK,UACvFD,EAAaJ,SAASM,MAAQV,EAASI,SAASM,OAASF,EAAaJ,SAASM,OAGpE,YAAAC,aAAb,SAA0BnB,EAAgBO,EAAgBC,mGACpC,SAAM/G,KAAKgH,YAAYT,EAAQO,kBAA/CS,EAAgB,SAAwCnB,UAG1DpG,KAAKsH,mBAAmBC,EAAcR,GACtC,GAAM/G,KAAKoH,eAAeb,EAAQO,EAAQS,KAFxC,oBAEF,sBAIA,OAFAA,EAAe,CAAEN,WAAY,OAAQE,SAAU,CAAEK,WAAW,EAAOC,OAAO,IAC1EzH,KAAKsH,mBAAmBC,EAAcR,GACtC,GAAM/G,KAAK6G,eAAeN,EAAQO,EAAQS,WAA1C,4CAIS,YAAAI,gBAAb,SAA6BpB,mGACd,SAAMjB,MAAM,GAAGR,EAAH,UAA4ByB,EAASxB,EAAkB,CAC9EY,OAAQ,MACRC,QAAS,CACPY,cAAe,UAAUxG,KAAKiF,MAC9BY,OAAQ,qCAIQ,OARdI,EAAO,UAQJC,QAAkC,MAAhBD,EAAKC,OAA5B,MACF,GAAMlG,KAAKsG,gBAAgBC,WAC3B,OADA,SACA,IAAM,IAAIK,GAAgBe,gBAAgBpB,WAA1C,0BAGF,MAAO,CAAP,EAAON,EAAKV,gBAGD,YAAAqC,mBAAb,SAAgCrB,EAAgBsB,EAAgBC,qGAEjD,SAAMxC,MAAM,GAAGR,EAAH,UAA4ByB,EAASxB,GADxC+C,EAAe,iBAAiBA,EAAY,WAAWD,EAAW,WAAWA,GACQ,CACzGlC,OAAQ,MACRC,QAAS,CACPY,cAAe,UAAUxG,KAAKiF,MAC9BY,OAAQ,qCAIQ,OARdI,EAAO,UAQJC,OAAL,MACF,GAAMlG,KAAKsG,gBAAgBC,WAC3B,OADA,SACA,IAAM,IAAIK,GAAgBgB,mBAAmBrB,EAAQsB,EAAQC,WAA7D,0BAG+B,SAAM7B,EAAKV,eAC5C,MAAO,CAAP,EAAO,CAAEwC,KADHb,EAA2B,UACd,GAAGc,iBAAkBC,MAAOf,EAAK,GAAGgB,WAAW,GAAGD,gBAG1D,YAAAE,kBAAb,SAA+B5B,EAAgBO,mGAChC,SAAMxB,MAAM,GAAGR,EAAH,UAA4ByB,EAA5B,oBAAkEO,EAAU,CACnGnB,OAAQ,MACRC,QAAS,CACPY,cAAe,UAAUxG,KAAKiF,MAC9BY,OAAQ,qCAIQ,OARdI,EAAO,UAQJC,OAAL,MACF,GAAMlG,KAAKsG,gBAAgBC,WAC3B,OADA,SACA,IAAM,IAAIK,GAAgBuB,kBAAkB5B,EAAQO,WAApD,0BAGF,OAAoB,MAAhBb,EAAKC,OACA,CAAP,EAAO,CAAEC,MAAOnB,IAGkB,GAAMiB,EAAKV,eAC/C,MAAO,CAAP,EAAO,CAAEa,QAD2B,SACb,aAE3B,EAtOA,GAwOA,UCzQO,IAAMgC,EAAa,CACxB,CACE/H,KAAM,mBACNgI,KAAM,OACNC,QAAS,yCACTC,MAAO,8EACPC,UAAU,GAEZ,CACEnI,KAAM,0BACNgI,KAAM,QACNC,QAAS,6CACTC,MAAO,kWAIPC,UAAU,GAEZ,CACEnI,KAAM,SACNgI,KAAM,WACNC,QAAS,mCACTC,MAAO,4EACPC,UAAU,2yDCkHd,QA9HA,YAUE,WAAYjJ,EAAyBC,EAAiBC,GAAtD,MACE,YAAMF,EAAYC,EAASC,IAAU,YACrC,EAAKgJ,wBAgHT,OA5H4B,OAelB,YAAAC,yBAAR,sBACE1I,KAAK2I,iBAAiBpG,iBAAiB,SAAS,WAC9CjB,EAAW,EAAKqH,iBAAkB,EAAKC,kBACvChH,EAAa,EAAKiH,gBAAiB,EAAKC,cAAcC,cAAe,EAAKC,gBAAiB,EAAKC,SAChG,EAAKH,cAAcN,UAAW,MAI1B,YAAAU,wBAAR,sBACElJ,KAAK6I,gBAAgBtG,iBAAiB,SAAS,WAC7CjB,EAAW,EAAKuH,gBAAiB,EAAKC,cAAcC,cAAe,EAAKC,iBACxEpH,EAAa,EAAK+G,iBAAkB,EAAKC,iBAAkB,EAAKK,SAChE,EAAKH,cAAcN,UAAW,MAI1B,YAAAW,4BAAR,WACE,IAAMC,EAAW,IAAI,EAAcpJ,KAAKC,KAAM,MAAO,2BAA2BA,KAChFD,KAAK2I,iBAAmB,IAAI,EAAcS,EAAU,SAAU,+BDhBjD,eCgBqHnJ,KAClID,KAAK6I,gBAAkB,IAAI,EAAcO,EAAU,SAAU,wBDhBjD,eCgB6GnJ,KACzHD,KAAK0I,2BACL1I,KAAKkJ,2BAGC,YAAAG,gBAAR,SAAwB9J,SACtB,EAA4D6I,EAAWkB,KAAI,SAAApC,GACzE,IAAMqC,EAAQ,IAAI,EAAchK,EAAY,MAAO,oCAAoCU,KAEjFuJ,GADY,IAAI,EAAcD,EAAO,IAAK,iCAAkCrC,EAAK7G,MACpE,IAAI,EAAgCkJ,EAAO,QAAS,mCAAmCtJ,MAK1G,OAJAuJ,EAAWnB,KAAOnB,EAAKmB,KACvBmB,EAAWlB,QAAUpB,EAAKoB,QAC1BkB,EAAWjB,MAAQrB,EAAKqB,MACxBiB,EAAWhB,SAAWtB,EAAKsB,SACpBgB,KARRxJ,KAAK8I,cAAa,KAAE9I,KAAKyJ,WAAU,KAAEzJ,KAAK0J,cAAa,KAUxD9H,EAAa5B,KAAK8I,cAAcC,gBAG1B,YAAAY,mBAAR,WACQ,MAA0B,CAAC3J,KAAK8I,cAAcc,MAAO5J,KAAKyJ,WAAWG,MAAO5J,KAAK0J,cAAcE,OACrG,MAAO,CAAEvJ,KADE,KACIwJ,MADG,KACIC,SADM,OAItB,YAAAC,mBAAR,WACE,IAAMC,EAAkBhK,KAAK8I,cAAcmB,SAASC,MAC9CC,EAAenK,KAAKyJ,WAAWQ,SAASC,MACxCE,EAAkBpK,KAAK0J,cAAcO,SAASC,MACpD,OAAOF,GAAmBG,GAAgBC,GAG9B,YAAAC,wBAAd,6GAEyB,OADjB3E,EAAW1F,KAAK2J,qBACC,IAAM,IAAI,GAAgBlE,gBAAgBC,kBAA3D4E,EAAiB,SACvBtK,KAAKiJ,QAAQhH,UAAYqI,EAAenE,MAAQmE,EAAenE,MD1C7B,oDC2ClC7E,EAAWtB,KAAKiJ,qBAGV,YAAAsB,wBAAR,sBACEvK,KAAKgJ,gBAAgBzG,iBAAiB,SAAS,SAAMiI,GAAK,8FACpDxK,KAAK+J,sBACPS,EAAMC,iBACN,GAAMzK,KAAKqK,4BAFT,aAEF,+CAKQ,YAAAK,yBAAd,+GAE0B,OADlBhF,EAAW1F,KAAK2J,qBACE,IAAM,IAAI,GAAgBtD,cAAcX,kBAA1DiF,EAAkB,UAEJxE,OAClBnG,KAAKiJ,QAAQhH,UAAY0I,EAAgBxE,MACzC7E,EAAWtB,KAAKiJ,WAEV2B,EAAkB,CACtBC,UAAWF,EAAgBvE,QAAQnB,MACnC6F,iBAAkBH,EAAgBvE,QAAQnB,MAC1ClD,SAAU4I,EAAgBvE,QAAQ/F,KAClCkG,OAAQoE,EAAgBvE,QAAQG,QVpGXwE,EUsGVH,EVrGjB7J,EAAkBS,SAAQ,SAAAmB,GAAO,OAAAzB,aAAawF,QAAQ/D,EAAKoI,EAAapI,OUsGpEE,OAAOC,SAASxC,KAAOuC,OAAOC,SAASxC,OAAS,YAAsB,IAAM,iBVvGtD,IAACyK,SU2GnB,YAAAC,yBAAR,sBACEhL,KAAK4I,iBAAiBrG,iBAAiB,SAAS,SAAMiI,GAAK,8FACrDxK,KAAK+J,sBACPS,EAAMC,iBACN,GAAMzK,KAAK0K,6BAFT,aAEF,+CAKE,YAAAO,wBAAR,WACE,IAAMC,EAAO,IAAI,EAA+BlL,KAAKC,KAAM,OAAQ,sBAAsBA,KACzFD,KAAKqJ,gBAAgB6B,GACrBlL,KAAK4I,iBAAmB,IAAI,EAAcsC,EAAM,SAAU,0CD1FrD,SC0F2HjL,KAChID,KAAKgJ,gBAAkB,IAAI,EAAckC,EAAM,SAAU,sCD1FjD,sBC0FsHjL,KAC9HD,KAAKiJ,QAAU,IAAI,EAAciC,EAAM,IAAK,+BAA+BjL,KAC3ED,KAAKgL,2BACLhL,KAAKuK,2BAGC,YAAA9B,oBAAR,WACmB,IAAI,EAAczI,KAAKC,KAAM,MAAO,uBACrDD,KAAKmJ,8BACLnJ,KAAKiL,2BAET,EA5HA,CAA4B,GCwC5B,EA5CA,WAQE,WAAY1L,EAAyBgB,GACnCP,KAAKT,WAAaA,EAClBS,KAAKT,WAAWgB,GAAKA,EACrBP,KAAKmL,OAAS,IAAI,EAAOnL,KAAKT,WAAY,SAAU,UACpDS,KAAKoL,aACLpL,KAAKqL,OAAS,IAAI,EAAOrL,KAAKT,WAAY,SAAU,UACpDS,KAAKsL,MAAQ,IAAI,EAAMtL,KAAKT,WAAY,MAAO,SAC/CS,KAAKuL,cAAgB,IAAI,EAAcvL,KAAKT,WAAY,MAAO,iBAC/DS,KAAKwL,4BACLxL,KAAKyL,8BACLzL,KAAK0L,6BAwBT,OArBU,YAAAD,4BAAR,sBACEzL,KAAKmL,OAAO1I,aAAe,WAAM,OAAAnB,EAAW,EAAKiK,cAActL,KAAM,EAAKqL,MAAMrL,QAG1E,YAAAuL,0BAAR,sBACExL,KAAKmL,OAAO7H,aAAe,WAAM,SAAKgI,MAAMrL,KAAKyB,UAAUiK,OAAO,YAG5D,YAAAD,2BAAR,sBACE1L,KAAKsL,MAAMzG,QAAU,WAAM,OAAAjD,EAAa,EAAKuJ,OAAO/H,KAAM,EAAK+H,OAAOjI,WAAY,EAAKqI,cAActL,QAG7F,YAAA2L,sBAAV,WACE5L,KAAK6L,KAAK3L,UACVF,KAAKoL,cAGG,YAAAA,WAAV,WACEpL,KAAK6L,KAAO,IAAI,EAAc7L,KAAKT,WAAY,OAAQ,QACjC,IAAI,EAAcS,KAAK6L,KAAK5L,KAAM,MAAO,8BAEnE,EA1CA,ieCUA,QAdA,YACE,WAAYV,EAAyBC,EAAiBC,EAAmBqM,GAAzE,MACE,YAAMvM,EAAYC,EAASC,IAAU,YACrC,EAAKsM,iBAAiBD,KAS1B,OAZyB,OAMf,YAAAC,iBAAR,SAAyBD,GACvB,IAAME,EAAuB,IAAI,EAAchM,KAAKC,KAAM,MAAO,iBAAiBA,KAE5EgM,GADkB,IAAI,EAAcD,EAAsB,OAAQ,qBAAsBF,EAAQzL,MAClF,IAAI,EAAcL,KAAKC,KAAM,MAAO,iBAAiBA,MACjD,IAAI,EAAcgM,EAAa,OAAQ,qBAAsBH,EAAQI,OAEjG,EAZA,CAAyB,GCiBzB,EApBiB,CACf,CACE7L,KAAM,sBACN6L,KAAM,8JAGR,CACE7L,KAAM,UACN6L,KAAM,0GAER,CACE7L,KAAM,OACN6L,KAAM,sHAER,CACE7L,KAAM,aACN6L,KAAM,kkBCcV,QAxBA,YACE,WAAY3M,EAAyBgB,UACnC,YAAMhB,EAAYgB,IAAG,KAoBzB,OAtBuB,OAKb,YAAA4L,kBAAR,SAA0B5M,GACxB,WAAiB,SAAA6M,GACC,IAAI,EAAW7M,EAAY,MAAO,UAAW6M,OAIzD,YAAAC,wBAAR,SAAgC9M,GACA,IAAI,EAAcA,EAAY,MAAO,6CACvC,IAAI,EAAcA,EAAY,MAAO,4CAGzD,YAAA6L,WAAV,WACEpL,KAAK6L,KAAO,IAAI,EAAc7L,KAAKT,WAAY,OAAQ,QACvD,IAAM+M,EAAgB,IAAI,EAActM,KAAK6L,KAAK5L,KAAM,MAAO,4CAA4CA,KAC3GD,KAAKmM,kBAAkBG,GACvBtM,KAAKqM,wBAAwBC,IAEjC,EAtBA,CAAuB,GCNhB,IAAMC,EAAc,CAAC,YAAa,YAAa,YAAa,YAAa,YAAa,YAAa,iBAE7FC,EAAiB,CAC5B/L,UAAW,CACTJ,KAAM,aACNC,KAAM,uBACNC,GAAI,mBAENG,OAAQ,CACNL,KAAM,SACNC,KAAM,mBACNC,GAAI,0eC+ER,QAlFA,YAKE,WAAYhB,EAAyBC,EAAiBC,GAAtD,MACE,YAAMF,EAAYC,EAASC,IAAU,YACrC,EAAKgN,uBAyET,OAhF2B,OAUjB,YAAAC,qBAAR,SAA6BC,EAAwBC,GAArD,WACED,EAAUpK,iBAAiB,SAAS,WAC9BoK,IAAc,EAAKE,eACrB3L,aAAawF,QAAQ,qBAAsBkG,EAAWE,YACtD5L,aAAa0B,WAAW,iBACxBhB,EAAa,EAAKiL,cAClBvL,EAAWqL,GACX,EAAKE,aAAeF,EACpB,EAAKI,mBAOH,YAAAC,gBAAR,SAAwBC,GAAxB,WACQlL,EAAWb,aAAaC,QAAQ,YAChC+L,EAAY,IAAI,EAAclN,KAAKC,KAAM,KAAM,cACrDsM,EAAY/K,SAAQ,SAACnB,EAAM8M,GACzB,IAAMR,EAAY,IAAI,EAAcO,EAAUjN,KAAM,KAAM,mBAAoBI,GAAMJ,KAChFkN,IAAUF,EAAMhM,qBAClBK,EAAWqL,GACX,EAAKE,aAAeF,GAGjB5K,GAAYoL,IAAUZ,EAAYa,OAAS,GAC9CT,EAAUjL,UAAUC,IAAI,UAGtB4K,EAAYa,OAAS,GACvBT,EAAUpK,iBAAiB,SAAS,eAKtC,EAAKmK,qBAAqBC,EAAWQ,OAIjC,YAAAE,eAAR,WACE,IAAMC,EAAW,IAAI,EAActN,KAAKC,KAAM,MAAO,aAAaA,KAC7C,IAAI,EAAcqN,EAAU,MAAO,mBACnCxJ,OAAOC,OAAOyI,GACtBhL,SAAQ,SAAA+L,GACF,IAAI,EAAiCD,EAAU,IAAK,kBAAmBC,EAAalN,MAAMJ,KAClGa,KAAOyM,EAAajN,SAIzB,YAAAkN,mBAAR,SAA2BP,GACzB,IAAMQ,EAAU,IAAI,EAAczN,KAAKC,KAAM,MAAO,gBAAgBA,KACpED,KAAK0N,eAAiB,IAAI,EAAcD,EAAS,MAAO,oBAAqB,GAAGR,EAAM7L,eAAiBnB,KACvF,IAAI,EAAcwN,EAAS,MAAO,wBAAyB,KAAKxN,KACzD,IAAI,EAAcwN,EAAS,MAAO,sBAAuB,GAAGR,EAAM5L,gBAAkBpB,MAGrG,YAAA0N,iBAAR,WACE9K,OAAON,iBAAiB,cAAc,WACpCrB,aAAa0B,WAAW,sBACxB1B,aAAa0B,WAAW,qBAIpB,YAAA6J,mBAAR,WACE,IAAMQ,EAAQjM,IACdhB,KAAKgN,gBAAgBC,GACrBjN,KAAKqN,iBACLrN,KAAKwN,mBAAmBP,GACxBjN,KAAK2N,oBAET,EAhFA,CAA2B,ieCFdC,EAAW,IAAIC,MA2G5B,QAzGA,YAYE,WAAYtO,EAAyBC,EAAiBC,EAAmBsH,GAAzE,MACE,YAAMxH,EAAYC,EAASC,IAAU,YAErC,EAAKqO,WAAW/G,KAwFpB,OAvG2B,OAkBzB,YAAAgH,qBAAA,SAAqBC,EAAwBjH,GAC3CiH,EAAUzL,iBAAiB,SAAS,WAC9BqL,GACFA,EAASK,QAEX,IAAMC,EAAW,CAACnH,EAASoH,MAAOpH,EAASqH,aAAcrH,EAASsH,cAClET,EAASU,IAASxJ,EAAI,IAAIoJ,EAAS,GACnCN,EAASW,OACT,IAAIC,EAAU,EACdZ,EAASrL,iBAAiB,SAAS,aACjCiM,GACeN,EAASd,QACtBQ,EAASK,QAEXL,EAASU,IAASxJ,EAAI,IAAIoJ,EAASM,GACnCZ,EAASW,cAKP,YAAAE,gBAAR,SAAwB1M,EAAkBgF,GACxC,IAAM2H,EAAY,IAAI,EAAc1O,KAAKC,KAAM,MAAO,oBAAoBA,KAC1EyO,EAAUC,MAAMC,gBAAkB,OAAO9J,EAAI,IAAIiC,EAAS8H,MAAK,IAC/D,IAAMb,EAAY,IAAI,EAAcU,EAAW,SAAU,oBAAoBzO,KAC7ED,KAAK+N,qBAAqBC,EAAWjH,GACrC,IAAM+H,EAAc,IAAI,EAAcJ,EAAW,MAAO,8BAA8BzO,KAChF8O,EAAkB,IAAI,EAAcD,EAAa,OAAQ,8BAA+B,IAAG9O,KAAKgP,cAAgB,IAChHC,EAAgB,IAAI,EAAcH,EAAa,OAAQ,4BAA6B,IAAG9O,KAAKkP,YAAc,IAC5GnN,IACFgN,EAAgB9O,KAAKyB,UAAUC,IAAI,cACnCsN,EAAchP,KAAKyB,UAAUC,IAAI,gBAIrC,YAAAwN,sBAAA,SAAsBpN,EAAkBgF,GAAxC,WACQqI,EAAW,IAAI,EAAcpP,KAAKC,KAAM,SAAU,4BAA4BA,KAC9EoP,EAAU,IAAI,EAAcrP,KAAKC,KAAM,SAAU,2BAA2BA,KAC9E8B,IACFqN,EAAS1N,UAAUC,IAAI,cACvB0N,EAAQ3N,UAAUC,IAAI,eAExByN,EAAS7M,iBAAiB,SAAS,uoCAIjC,OAHMgE,EAASrF,aAAaC,QAAQ,UACpCG,EAAW8N,GACXA,EAASrG,cAAcrH,UAAUC,IAAI,QACrC,IAAM,IAAI,GAAgB+F,aAAanB,EAAQQ,EAASxG,GAAI,CAAE0G,WAAY,OAAQE,SAAU,CAACK,WAAW,oBAAxG,8BAJiC,sRAOnC6H,EAAQ9M,iBAAiB,SAAS,WAChCjB,EAAW+N,GACXzN,EAAawN,GACbC,EAAQtG,cAAcrH,UAAUC,IAAI,WACpCyN,EAAST,MAAMW,cAAgB,WAI3B,YAAAC,WAAR,SAAmBxI,GACjB,IAAMyI,EAAgB,IAAI,EAAcxP,KAAKC,KAAM,MAAO,6BAA6BA,KAC1E,IAAI,EAAcuP,EAAe,MAAO,kBAAmB,GAAGzI,EAAS0I,MAChE,IAAI,EAAcD,EAAe,MAAO,yBAA0B,GAAGzI,EAAS2I,eAC5E,IAAI,EAAcF,EAAe,MAAO,2BAA4B,GAAGzI,EAAS4I,gBAGhG,YAAAC,iBAAR,SAAyB7I,GACvB,IAAM8I,EAAe,IAAI,EAAc7P,KAAKC,KAAM,MAAO,mCAAmCA,KAChF,IAAI,EAAc4P,EAAc,MAAO,mBAC/C5P,KAAKgC,UAAY8E,EAAS+I,YACP,IAAI,EAAcD,EAAc,MAAO,kBAAmB,GAAG9I,EAASgJ,uBAGvF,YAAAC,cAAR,SAAsBjJ,GACpB,IAAMkJ,EAAmB,IAAI,EAAcjQ,KAAKC,KAAM,MAAO,gCAAgCA,KAC7E,IAAI,EAAcgQ,EAAkB,MAAO,mBACnDhQ,KAAKgC,UAAY8E,EAASmJ,YACP,IAAI,EAAcD,EAAkB,MAAO,kBAAmB,GAAGlJ,EAASoJ,uBAG/F,YAAArC,WAAR,SAAmB/G,GACjB,IAAMhF,EAAWb,aAAaC,QAAQ,YACtCnB,KAAKyO,gBAAgB1M,EAAUgF,GAC/B/G,KAAKmP,sBAAsBpN,EAAUgF,GACrC/G,KAAKuP,WAAWxI,GAChB/G,KAAK4P,iBAAiB7I,GACtB/G,KAAKgQ,cAAcjJ,IAEvB,EAvGA,CAA2B,8yDCiF3B,QApEA,YAGE,WAAYxH,EAAyBgB,UACnC,YAAMhB,EAAYgB,IAAG,KA8DzB,OAlE2B,OAOzB,YAAA6P,oBAAA,SAAoBC,GAApB,WACEA,EAAS9N,iBAAiB,SAAS,WACjC,IAAM+N,EAAgBtP,IACc,KAAhCsP,EAAclP,gBAAwBkP,EAAclP,cAAgB,GACxE,EAAKmP,aAAa7C,eAAezL,WAAaqO,EAAclP,iBAAiB0L,WAC7E5L,aAAawF,QAAQ,iBAAkB4J,EAAclP,iBAAiB0L,YACtE,EAAKlB,4BAIT,YAAA4E,oBAAA,SAAoBC,GAApB,WACEA,EAASlO,iBAAiB,SAAS,WACjC,IAAM+N,EAAgBtP,IACc,IAAhCsP,EAAclP,gBAAsBkP,EAAclP,cAAgB,IACtE,EAAKmP,aAAa7C,eAAezL,WAAaqO,EAAclP,iBAAiB0L,WAC7E5L,aAAawF,QAAQ,iBAAkB4J,EAAclP,iBAAiB0L,YACtE,EAAKlB,4BAID,YAAA8E,mBAAR,SAA2BnR,GACzB,IAAMoR,EAAoB,IAAI,EAAcpR,EAAY,MAAO,2BAA2BU,KACpFwQ,EAAW,IAAI,EAAcE,EAAmB,SAAU,uBAAuB1Q,KACjFoQ,EAAW,IAAI,EAAcM,EAAmB,SAAU,uBAAuB1Q,KACvFD,KAAKoQ,oBAAoBC,GACzBrQ,KAAKwQ,oBAAoBC,IAGb,YAAAG,YAAd,SAA0BrR,yHAClBsR,EAAiB,IAAI,EAActR,EAAY,MAAO,6BAA6BU,KACnFqQ,EAAgBtP,IAChBkG,EAAO,CACX9B,MAAOkL,EAAcrP,mBACrBoE,KAAMiL,EAAclP,cAAgB,GAGhCmF,EAASrF,aAAaC,QAAQ,UACjB,IAAf+F,EAAK9B,MAAL,MACM,IAAM,IAAI,GAAgBD,SAAS+B,EAAK9B,MAAO8B,EAAK7B,qBAA5DyL,EAAQ,sBAEC,UAAM,IAAI,GAAgBlJ,mBAAmBrB,EAAQ,mCAAoC,gBAAlGuK,EAAS,SAAkG/I,4BAG7G+I,EAAMtP,SAAQ,SAAMuF,GAAQ,uEACb,IAAI,EAAa8J,EAAgB,MAAO,YAAa9J,4BAI5D,YAAAqE,WAAV,sBACEpL,KAAK6L,KAAO,IAAI,EAAc7L,KAAKT,WAAY,OAAQ,QACvD,IAAM+M,EAAgB,IAAI,EAActM,KAAK6L,KAAK5L,KAAM,MAAO,4CAA4CA,KAC3GD,KAAKuQ,aAAe,IAAI,EAAajE,EAAe,MAAO,kBAC3DtM,KAAK0Q,mBAAmBpE,GACxBtM,KAAK4Q,YAAYtE,GACjBtM,KAAKmL,OAAOlL,KAAK8Q,MAAM/Q,KAAK6L,KAAK5L,MAEjCD,KAAKuQ,aAAaxD,YAAc,WAAM,SAAKnB,yBAC3CgC,EAASK,SAEb,EAlEA,CAA2B,GCuC3B,EAzDA,WAQE,WAAY1O,EAAyBgC,EAAyByP,GAC5DhR,KAAKT,WAAaA,EAClBS,KAAKuB,SAAWA,EAChBvB,KAAKiR,OAAS1P,EAAS6L,OACvBpN,KAAKgR,SAAWA,EA2CpB,OAxCE,YAAAE,eAAA,SAAezR,GAEb,OADiB,IAAI,EAAcO,KAAKmR,cAAclR,KAAM,KAAMR,GAAWQ,MAI/E,YAAAmR,YAAA,SAAYC,GACV,IAAMlN,EAASkN,EAAWlN,OAE1B,GAAMA,EAAOmN,QAAQ,MAArB,CAEA,IAAMC,EAAYvR,KAAKwR,WAAWC,QAAQtN,GAGpCuN,EAAqB,CACzBvE,MAAOoE,EACPI,MAJc3R,KAAKuB,SAASgQ,GAK5BpN,OAAQkN,EAAWlN,QAGC,OAAlBnE,KAAKgR,UACPhR,KAAKgR,SAASU,KAIlB,YAAAE,YAAA,SAAYX,EAAgBxR,GAA5B,WACEO,KAAKwR,WAAa,GAElB,IAAK,IAAIK,EAAI,EAAGA,EAAIZ,EAAQY,IAC1B7R,KAAKwR,WAAWM,KAAK9R,KAAKkR,eAAezR,IACzCO,KAAKwR,WAAWK,GAAG5P,UAAYjC,KAAKuB,SAASsQ,GAG/C7R,KAAKmR,cAAclR,KAAKsC,iBAAiB,SAAS,SAAAiI,GAAS,SAAK4G,YAAY5G,OAG9E,YAAAuH,gBAAA,SAAgBtS,EAAmBuS,GAGjC,OAFAhS,KAAKmR,cAAgB,IAAI,EAAcnR,KAAKT,WAAY,KAAME,GAC9DO,KAAK4R,YAAY5R,KAAKiR,OAAQe,GACvBhS,KAAKmR,eAEhB,EAvDA,GCHA,IAAMc,EAAmC,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC7DC,GACmB,UCFzB,4BAQA,OAPQ,YAAAC,QAAN,SAAc9M,EAAcD,4nCACb,SAAME,MACjB,8DAA8DD,EAAI,UAAUD,WAEjE,SAHA,SAGWG,eACxB,MAAO,CAAP,EADa,+SAGjB,EARA,GAUA,YCoBA,SA3BA,WAGE,aACEvF,KAAKkH,KAAO,IAAI,GAqBpB,OAlBE,YAAAkL,qBAAA,WACE,OAAOC,KAAKC,MAAsB,GAAhBD,KAAKE,WAGnB,YAAAC,aAAN,SAAmBC,4nCACJ,SAAMzS,KAAKkH,KAAKiL,QAAQ,EAAGM,WACxC,MAAO,CAAP,EADa,+SAIf,YAAAC,gBAAA,SAAgBxL,EAAwByL,GACtC,EAAG,CACD,IAAMC,EAAU1L,EAAKlH,KAAKoS,wBAAwB1C,cAC7CiD,EAAaE,SAASD,IACzBD,EAAab,KAAKc,SAEbD,EAAavF,OAAS,GAC/B,OAAOuF,GAEX,EAzBA,izDCsTA,SAlTA,YAYE,WAAYpT,EAAyBC,EAAiBC,GAAtD,MACE,YAAMF,EAAYC,EAASC,IAAU,YACrC,EAAKqT,WAAa,IAAI,GACtB,EAAKC,aACL,EAAKhB,kBACL,EAAKiB,WAAa,EAClB,EAAKC,gBAAkB,KACvB,EAAKC,iBAAmB,CAAEC,QAAS,GAAIC,MAAO,IAC9C,EAAKC,gBAAkB,KACvB,EAAKC,aAAc,IA2RvB,OAhTyB,QAwBvB,YAAAC,eAAA,SAAed,GACb,IAAMe,EAAoCC,MAAMC,KAAK9T,SAAS+T,iBAAiB,kBAM/E,MAL4B,CAC1BxG,MAAOsF,EACPtO,OAAQqP,EAAcf,GACtBd,MAAO6B,EAAcf,GAAKmB,YAK9B,YAAAb,WAAA,sBACEnT,SAAS2C,iBAAiB,WAAW,SAAAsR,GACnC,IAAyB,IAArB,EAAKP,YACP,OAAQO,EAAOC,MACb,IAAK,SAAU,EAAKC,kBAAkB,GACpC,MACF,IAAK,SAAU,EAAKA,kBAAkB,GACpC,MACF,IAAK,SAAU,EAAKA,kBAAkB,GACpC,MACF,IAAK,SAAU,EAAKA,kBAAkB,GACpC,MACF,IAAK,SAAU,EAAKA,kBAAkB,GACpC,MACF,IAAK,SAAU,EAAKA,kBAAkB,QAIxC,OAAQF,EAAOC,MACb,IAAK,SAAU,EAAKE,eAAe,EAAKT,eAAe,IACrD,MACF,IAAK,SAAU,EAAKS,eAAe,EAAKT,eAAe,IACrD,MACF,IAAK,SAAU,EAAKS,eAAe,EAAKT,eAAe,IACrD,MACF,IAAK,SAAU,EAAKS,eAAe,EAAKT,eAAe,IACrD,MACF,IAAK,SAAU,EAAKS,eAAe,EAAKT,eAAe,IAKvC,UAAhBM,EAAOC,MACT,EAAKG,uBAAuB,EAAKhB,gBAAgB9E,OAGnD,IAAM+F,EAAatU,SAASuU,cAAc,uBAEtB,UAAhBN,EAAOC,MAA6C,OAAzB,EAAKb,kBAAiD,IAArB,EAAKK,aACnE,EAAKc,wBAAwBF,GAGX,UAAhBL,EAAOC,MAA6C,OAAzB,EAAKT,kBAAiD,IAArB,EAAKC,aACnE,EAAKe,6BAKX,YAAAC,kBAAA,SAAkBC,GACI,IAAI,EAAcvU,KAAKwU,cAAcvU,KAAM,IAAK,2BAA2BA,KACnFgC,UAAYsS,GAG1B,YAAAE,aAAA,SAAa/C,GACIA,EAAKvN,OAERmN,QAAQ,OACpBtR,KAAK+T,kBAAkBrC,EAAKvE,QAG9B,YAAA4G,kBAAA,SAAkB5G,GAChBnN,KAAKqT,gBAAkBlG,EACvBnN,KAAK0U,WAAWlD,WAAWmD,OAAO3U,KAAKqT,gBAAiB,GACxDrT,KAAK0U,WAAWlD,WAAWhQ,SAAQ,SAAA4K,GAAQ,OAAAA,EAAK1K,UAAUC,IAAI,gBAC9D3B,KAAK4U,qBAAqB5U,KAAKqT,kBAGjC,YAAAwB,gBAAA,SAAgBnD,GACd,IAAMoD,EAAapD,EAAKvN,OAClB4Q,EAAS,CACbC,QAAS,WAAWhV,KAAKiT,gBAAgBxD,KAAI,eAAezP,KAAKiT,gBAAgBvD,cACjFvB,MAAOnO,KAAKiT,gBAAgB9E,OAE1BuD,EAAKC,QAAU3R,KAAKiT,gBAAgBvD,eACtCoF,EAAWpT,UAAUC,IAAI,kBACzB3B,KAAKkT,iBAAiBC,QAAQrB,KAAKiD,KAEnCD,EAAWpT,UAAUC,IAAI,gBACzB3B,KAAKkT,iBAAiBE,MAAMtB,KAAKiD,KAIrC,YAAAE,sBAAA,SAAsBC,GAAtB,WACQC,EAAoB,IAAI,EAAcnV,KAAKwU,cAAcvU,KAAM,MAAO,iCAAiCA,KAE5F,IAAI,EAAckV,EAAmB,OAAQ,0BAA0BlV,KAC/EsC,iBAAiB,SAAS,WAAM,SAAK0R,uBAAuB,EAAKhB,gBAAgB9E,UAEvD,IAAI,EAAcgH,EAAmB,OAAQ,0CAA0ClV,KAC/FgC,UAAejC,KAAKiT,gBAAgBxD,KAAI,IAAIzP,KAAKiT,gBAAgBtD,cAE5FuF,EAAmBnE,MAAMoE,IAG3B,YAAAC,kBAAA,WACE,IAAMC,EAAczV,SAASuU,cAAc,6BACrCe,EAAqB,IAAI,EAAclV,KAAKwU,cAAcvU,KAAM,MAAO,4BAA4BA,KACzGiV,EAAmBvG,MAAMC,gBAAkB,sDAAsD5O,KAAKiT,gBAAgBpE,MAAK,IAE3HwG,EAAYC,YAAYJ,GAExBlV,KAAKiV,sBAAsBC,GAERtV,SAASuU,cAAc,uBAC/BlS,UH/I2B,UGkJxC,YAAA+R,eAAA,SAAetC,GACb1R,KAAK6U,gBAAgBnD,GACrB1R,KAAKoV,qBAGP,YAAAG,sBAAA,sBACQR,EAAS,CACbC,QAAS,WAAWhV,KAAKiT,gBAAgBxD,KAAI,eAAezP,KAAKiT,gBAAgBvD,cACjFvB,MAAOnO,KAAKiT,gBAAgB9E,OAGTsF,MAAMC,KAAK9T,SAAS+T,iBAAiB,kBAC7CnS,SAAQ,SAAAgU,GACfA,EAAOvT,YAAc,EAAKgR,gBAAgBvD,eAC5C8F,EAAO9T,UAAUC,IAAI,qBAIzB3B,KAAKkT,iBAAiBE,MAAMtB,KAAKiD,GACjC/U,KAAKoV,qBAGP,YAAAK,uBAAA,SAAuBC,GAAvB,WACE1V,KAAK2V,YAAYD,EAAkB,sBAAuB,KAAM,mCAEhE,IAAME,EAAmC,GACzC5V,KAAKkT,iBAAiBE,MAAM5R,SAAQ,SAAA4K,GAClCwJ,EAAkB9D,KAAK1F,EAAK4I,YAGT,IAAI,EAAcU,EAAkB,OAAQ,uBAAuBzV,KAC3E2T,UAAYiC,OAAOD,EAAkBxI,QAE7B,IAAI,EAAKsI,EAAkBE,GAAmB,SAAAlE,GAAQ,SAAKuC,uBAC9E,EAAKf,iBAAiBE,MAAM1B,EAAKvE,OAAOgB,UAE7B4D,gBAAgB,6BAA8B,gBAG7D,YAAA4D,YAAA,SAAYG,EAAoBpW,EAAiBqW,EAAmBtW,GACpD,IAAI,EAAcqW,EAAOC,EAAWtW,GAAWQ,KACvDgC,UAAYvC,GAGpB,YAAAsW,yBAAA,SAAyBN,GAAzB,WACQO,EAAqC,GAC3CjW,KAAKkT,iBAAiBC,QAAQ3R,SAAQ,SAAA4K,GACpC6J,EAAoBnE,KAAK1F,EAAK4I,YAGhChV,KAAK2V,YAAYD,EAAkB,oBAAqB,KAAM,qCAEzC,IAAI,EAAcA,EAAkB,OAAQ,yBAAyBzV,KAC7E2T,UAAYiC,OAAOI,EAAoB7I,QAE7B,IAAI,EACzBsI,EACAO,GACA,SAAAvE,GAAQ,SAAKuC,uBAAuB,EAAKf,iBAAiBC,QAAQzB,EAAKvE,OAAOgB,UAEjE4D,gBAAgB,+BAAgC,gBAGjE,YAAAmE,2BAAA,WACElW,KAAKwU,cAActU,UACnBF,KAAKgT,WAAa,EAClBhT,KAAKiT,gBAAkB,KACvBjT,KAAKkT,iBAAmB,CAAEC,QAAS,GAAIC,MAAO,IAC9CpT,KAAKqT,gBAAkB,KACvBrT,KAAKsT,aAAc,EACnBtT,KAAK+R,mBAGP,YAAAoE,YAAA,sBACEnW,KAAKwU,cAActU,UACnBF,KAAKwU,cAAgB,IAAI,EAAcxU,KAAKC,KAAM,MAAO,uBAEzDD,KAAK2V,YAAY3V,KAAKwU,cAAcvU,KAAM,aAAc,KAAM,0BAE9D,IAAMyV,EAAmB,IAAI,EAAc1V,KAAKwU,cAAcvU,KAAM,MAAO,iCAAiCA,KAE5GD,KAAK2V,YAAYD,EAAkB,aAAc,KAAM,4BAEvD1V,KAAKyV,uBAAuBC,GAC5B1V,KAAKgW,yBAAyBN,GAEN,IAAI,EAAcA,EAAkB,SAAU,qBHxOf,eGwOwDzV,KAC/FsC,iBAAiB,SAAS,WAAM,SAAK2T,gCAE9B,IAAI,EAAcR,EAAkB,SAAU,qBH3Oa,WG2OiCzV,KACpGsC,iBAAiB,SAAS,WACvCM,OAAOC,SAAShC,KAAO,oBAIrB,YAAA8T,qBAAN,SAA2BwB,uGACR,OAAjB,EAAApW,KAAiB,GAAMA,KAAK8S,WAAWN,aAAa4D,kBAApD,EAAKC,UAAY,SACjBrW,KAAKiT,gBAAkBjT,KAAKqW,UAAUrW,KAAKgT,aAErCsD,EAAa,IACRxE,KAAK9R,KAAKiT,gBAAgBvD,eACrC1P,KAAKuW,QAAUvW,KAAK8S,WAAWJ,gBAAgB1S,KAAKqW,UAAWC,GAE/DtW,KAAKgT,YAAc,cAGf,YAAAoB,wBAAN,SAA8BoC,sGACxBA,EAAavU,YAAciQ,GAA3B,OACFlS,KAAKuV,6CAGmB,KAApBvV,KAAKgT,WAAL,OACFhT,KAAKmW,4BAEL,SAAMnW,KAAK4U,qBAAqB5U,KAAKqT,yBAArC,SACArT,KAAKqU,4DAKX,YAAAJ,uBAAA,SAAuBwC,GACD,IAAI5I,MAAM,kDAAkD4I,GACpElI,QAGd,YAAA8F,uBAAA,sBACErU,KAAKwU,cAActU,UACnBF,KAAKwU,cAAgB,IAAI,EAAcxU,KAAKC,KAAM,MAAO,qBAEzDD,KAAK2V,YAAY3V,KAAKwU,cAAcvU,KAAM,aAAc,KAAM,0BAE1C,IAAI,EAAcD,KAAKwU,cAAcvU,KAAM,SAAU,4BAA4BA,KACzFsC,iBAAiB,SAAS,WAAM,SAAK0R,uBAAuB,EAAKhB,gBAAgB9E,UAExE,IAAI,EAAKnO,KAAKwU,cAAcvU,KAAMD,KAAKuW,QAAQG,QAAQ,SAAAhF,GAAQ,SAAKsC,eAAetC,MAC3FK,gBAAgB,4BAA6B,gBAE1D,IAAMyE,EAAe,IAAI,EAAcxW,KAAKwU,cAAcvU,KAAM,SAAU,qBAAsBiS,IAAkBjS,KAClHuW,EAAajU,iBAAiB,SAAS,WAAM,SAAK6R,wBAAwBoC,MAE1ExW,KAAKsT,aAAc,EAEnB9Q,YAAW,WAAM,SAAKyR,uBAAuB,EAAKhB,gBAAgB9E,SAAQ,MAG5E,YAAA4D,gBAAA,sBACE/R,KAAKwU,cAAgB,IAAI,EAAcxU,KAAKC,KAAM,MAAO,cAEzDD,KAAK2V,YAAY3V,KAAKwU,cAAcvU,KAAM,aAAc,KAAM,oBAC9DD,KAAKsU,kBAAkB,6DAEL,IAAI,EAActU,KAAKwU,cAAcvU,KAAM,OAAQ,sBAAsBA,KACjFgC,UAAY,6BAEtBjC,KAAK0U,WAAa,IAAI,EAAK1U,KAAKwU,cAAcvU,KAAMgS,GAAmB,SAAA0E,GAAS,SAAKlC,aAAakC,MAClG3W,KAAK0U,WAAW3C,gBAAgB,2BAA4B,4BAExC,IAAI,EAAc/R,KAAKwU,cAAcvU,KAAM,SAAU,oBH/SpE,UG+S4GA,KACrGsC,iBAAiB,SAAS,WACP,OAAzB,EAAK8Q,iBACT,EAAKgB,6BAGX,EAhTA,CAAyB,keCUzB,SAZA,YACE,WAAY9U,EAAyBgB,UACnC,YAAMhB,EAAYgB,IAAG,KAQzB,OAV4B,QAKhB,YAAA6K,WAAV,WACE,IAAMS,EAAO,IAAI,EAAc7L,KAAKT,WAAY,OAAQ,QAClD+M,EAAgB,IAAI,EAAcT,EAAK5L,KAAM,MAAO,4CAA4CA,KACzF,IAAI,GAAWqM,EAAe,MAAO,wBAEtD,EAVA,CAA4B,OCL5B,4BAQA,OAPQ,YAAA6F,QAAN,SAAc9M,EAAcD,4nCACb,SAAME,MACjB,6DAA6DD,EAAI,UAAUD,WAEhE,SAHA,SAGWG,eACxB,MAAO,CAAP,EADa,+SAGjB,EARA,GAUA,+1CCLA,cAkBE,WAAYqR,EAAwB1P,EAAwB2P,GAC1D7W,KAAK4W,UAAYA,EACjB5W,KAAKkH,KAAOA,EACZlH,KAAKgT,WAAa,EAClBhT,KAAK8W,kBAAoB9W,KAAK+W,4BAC9B/W,KAAKiT,gBAAkBjT,KAAKkH,KAAKlH,KAAKgT,YACtChT,KAAKyP,KAAO,KACZzP,KAAKgX,gBAAkB,KACvBhX,KAAK6W,gBAAkBA,EACvB7W,KAAKkT,iBAAmB,CAAEC,QAAS,GAAIC,MAAO,IAC9CpT,KAAKiX,MAAQ,GACbjX,KAAKkX,OAAS,GACdlX,KAAKmX,MAAQ,EACbnX,KAAKoX,gBAAkB,EACvBpX,KAAKqX,YAAc,KACnBrX,KAAKsX,aAAe,KA4GxB,OAzGE,YAAAC,YAAA,WAC+B,IAAzBvX,KAAKoX,kBACPpX,KAAKkX,QAAU,EACflX,KAAKoX,gBAAkB,GAEzBpX,KAAKmX,OAASnX,KAAKkX,OACnBlX,KAAKoX,iBAAmB,GAG1B,YAAAI,aAAA,sBACQC,EAAoBhE,MAAMC,KAAK9T,SAAS+T,iBAAiB,uBAE/D8D,EAAkBjW,SAAQ,SAAAkW,GACpBD,EAAkBhG,QAAQiG,GAAU,EAAKN,gBAC3CM,EAAOhW,UAAUC,IAAI,kBAErB+V,EAAOhW,UAAUvB,OAAO,sBAKxB,YAAAyU,qBAAN,SAA2BvP,EAAcD,uGAE3B,OADN8B,EAAO,IAAI,GACjB,EAAAlH,KAAY,GAAMkH,EAAKiL,QAAQ9M,EAAMD,WAErC,OAFA,EAAK8B,KAAO,SACZlH,KAAKiT,gBAAkBjT,KAAKkH,KAAKlH,KAAKgT,YAC/B,CAAP,EAAOhT,KAAKkH,cAGd,YAAA6P,0BAAA,WACE,IAAMY,EAAatF,KAAKC,MAAsB,EAAhBD,KAAKE,UAC7BqF,EAAevF,KAAKC,MAAsB,GAAhBD,KAAKE,UAGrC,OAFAvS,KAAKiT,gBAAkBjT,KAAKkH,KAAKlH,KAAKgT,YACJ,IAAf2E,EAAmB3X,KAAKiT,gBAAgBvD,cAAgB1P,KAAKkH,KAAK0Q,GAAclI,eAIrG,YAAAmI,gBAAA,WACE7X,KAAKiT,gBAAkBjT,KAAKkH,KAAKlH,KAAKgT,YACtChT,KAAKyP,KAAKxN,UAAYjC,KAAKiT,gBAAgBxD,KAC3CzP,KAAK8W,kBAAoB9W,KAAK+W,4BAC9B/W,KAAKgX,gBAAgB/U,UAAYjC,KAAK8W,kBACtC9W,KAAKqX,YAAYpV,UAAY4T,OAAO7V,KAAKmX,OACzCnX,KAAKsX,aAAarV,UAAY,IAAIjC,KAAKkX,OAAM,mBAGzC,YAAArC,gBAAN,SAAsBiD,EAAqBhD,qFACzC9U,KAAKgT,YAAc,EACb+B,EAAS,CACbC,QAAS,WAAWhV,KAAKiT,gBAAgBxD,KAAI,eAAezP,KAAKiT,gBAAgBvD,cACjFvB,MAAOnO,KAAKiT,gBAAgB9E,OAEV,UAAf2G,GAA0B9U,KAAKiT,gBAAgBvD,gBAAkBoI,GAAgC,YAAfhD,GAA4B9U,KAAKiT,gBAAgBvD,gBAAkBoI,GACxJ9X,KAAKuX,cACLvX,KAAKkT,iBAAiBC,QAAQrB,KAAKiD,KAEnC/U,KAAKkT,iBAAiBE,MAAMtB,KAAKiD,GACjC/U,KAAKoX,gBAAkB,EACvBpX,KAAKkX,OAAS,IAEhBlX,KAAKwX,eACLxX,KAAK6X,6BAGP,YAAAE,cAAA,WACE/X,KAAKyP,KAAOzP,KAAKgY,eAAehY,KAAK4W,UAAW5W,KAAKiT,gBAAgBxD,KAAM,OAAQ,cACnFzP,KAAKgX,gBAAkBhX,KAAKgY,eAAehY,KAAK4W,UAAW5W,KAAK8W,kBAAmB,OAAQ,2BAG7F,YAAAmB,YAAA,sBACQC,EAAiB,IAAI,EAAclY,KAAK4W,UAAW,MAAO,mBAAmB3W,KAC7EkY,EAAa,IAAI,EAAcD,EAAgB,OAAQ,eAAejY,KACxED,KAAKoY,WACPC,cAAcrY,KAAKoY,WAErBD,EAAWlW,UAAY4T,OAAO7V,KAAKiX,OAEnCjX,KAAKoY,UAAYE,aAAY,WAC3BH,EAAWlW,UAAY4T,OAAO,EAAKoB,OAAS,GACzB,IAAf,EAAKA,QACP,EAAKJ,gBAAgB,EAAK3D,kBACtB,EAAKkF,WACPC,cAAc,EAAKD,cAGtB,MAGL,YAAAG,qBAAA,WACE,IAAMC,EAAiB,IAAI,EAAcxY,KAAK4W,UAAW,MAAO,mBAAmB3W,KAEnFD,KAAKqX,YAAcrX,KAAKgY,eAAeQ,EAAgB3C,OAAO7V,KAAKmX,OAAQ,OAAQ,gBAEnF,IAAMsB,EAAa,IAAI,EAAcD,EAAgB,MAAO,cAAcvY,KAC1ED,KAAKgY,eAAeS,EAAY,GAAI,OAAQ,qBAC5CzY,KAAKgY,eAAeS,EAAY,GAAI,OAAQ,qBAC5CzY,KAAKgY,eAAeS,EAAY,GAAI,OAAQ,qBAE5CzY,KAAKsX,aAAetX,KAAKgY,eAAeQ,EAAgB,IAAIxY,KAAKkX,OAAM,kBAAmB,OAAQ,kBAGpG,YAAAc,eAAA,SAAelC,EAAoBpW,EAAiBqW,EAAmBtW,GACrE,IAAM8I,EAAQ,IAAI,EAAcuN,EAAOC,EAAWtW,GAAWQ,KAE7D,OADAsI,EAAMtG,UAAYvC,EACX6I,GAEX,EA7IA,GA+IA,YCxFA,SAzDA,WAQE,WAAYhJ,EAAyBgC,EAAyByP,GAC5DhR,KAAKT,WAAaA,EAClBS,KAAKuB,SAAWA,EAChBvB,KAAKiR,OAAS1P,EAAS6L,OACvBpN,KAAKgR,SAAWA,EA2CpB,OAxCE,YAAAE,eAAA,SAAezR,GAEb,OADiB,IAAI,EAAcO,KAAKmR,cAAclR,KAAM,KAAMR,GAAWQ,MAI/E,YAAAmR,YAAA,SAAYC,GACV,IAAMlN,EAASkN,EAAWlN,OAE1B,GAAMA,EAAOmN,QAAQ,MAArB,CAEA,IAAMC,EAAYvR,KAAKwR,WAAWC,QAAQtN,GAGpCuN,EAAqB,CACzBvE,MAAOoE,EACPI,MAJc3R,KAAKuB,SAASgQ,GAK5BpN,OAAQkN,EAAWlN,QAGC,OAAlBnE,KAAKgR,UACPhR,KAAKgR,SAASU,KAIlB,YAAAE,YAAA,SAAYX,EAAgBxR,GAA5B,WACEO,KAAKwR,WAAa,GAElB,IAAK,IAAIK,EAAI,EAAGA,EAAIZ,EAAQY,IAC1B7R,KAAKwR,WAAWM,KAAK9R,KAAKkR,eAAezR,IACzCO,KAAKwR,WAAWK,GAAG5P,UAAYjC,KAAKuB,SAASsQ,GAG/C7R,KAAKmR,cAAclR,KAAKsC,iBAAiB,SAAS,SAAAiI,GAAS,SAAK4G,YAAY5G,OAG9E,YAAAuH,gBAAA,SAAgBtS,EAAmBuS,GAGjC,OAFAhS,KAAKmR,cAAgB,IAAI,EAAcnR,KAAKT,WAAY,KAAME,GAC9DO,KAAK4R,YAAY5R,KAAKiR,OAAQe,GACvBhS,KAAKmR,eAEhB,EAvDA,GCHA,IAAM,GAAmC,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,geCSnE,eAYE,WAAY5R,EAAyBC,EAAiBC,GAAtD,MACE,YAAMF,EAAYC,EAASC,IAAU,YACrC,EAAKsS,kBACL,EAAKgB,aACL,EAAKE,gBAAkB,KACvB,EAAKI,gBAAkB,KACvB,EAAKC,aAAc,EACnB,EAAKjO,KAAO,OAmLhB,OAtMyB,QAsBvB,YAAA0N,WAAA,sBACEnT,SAAS2C,iBAAiB,WAAW,SAAAiI,GACnC,OAAQA,EAAMsJ,MACZ,IAAK,SAAU,EAAKC,kBAAkB,GACpC,MACF,IAAK,SAAU,EAAKA,kBAAkB,GACpC,MACF,IAAK,SAAU,EAAKA,kBAAkB,GACpC,MACF,IAAK,SAAU,EAAKA,kBAAkB,GACpC,MACF,IAAK,SAAU,EAAKA,kBAAkB,GACpC,MACF,IAAK,SAAU,EAAKA,kBAAkB,GAIrB,eAAfvJ,EAAMsJ,MACR,EAAK4E,SAAS7D,gBAAgB,EAAK6D,SAAS5B,kBAAmB,SAG9C,cAAftM,EAAMsJ,MACR,EAAK4E,SAAS7D,gBAAgB,EAAK6D,SAAS5B,kBAAmB,WAG9C,UAAftM,EAAMsJ,MAA6C,OAAzB,EAAKT,kBAAiD,IAArB,EAAKC,aAClE,EAAKqF,wBAKL,YAAA/D,qBAAN,SAA2BvP,EAAcD,ooCAEtB,OADX8B,EAAO,IAAI,GACjB,EAAAlH,KAAiB,GAAMkH,EAAKiL,QAAQ9M,EAAMD,WAE1C,OAFA,EAAKiR,UAAY,SACjBrW,KAAKiT,gBAAkBjT,KAAKqW,UAAUrW,KAAKgT,YACpC,CAAP,EAAOhT,KAAKqW,gTAGd,YAAAtC,kBAAA,SAAkB5G,GAChBnN,KAAKqF,KAAOgN,KAAKC,MAAsB,GAAhBD,KAAKE,UAC5BvS,KAAKqT,gBAAkBlG,EACvB,IAAMyL,EAAgB5Y,KAAK0U,WAAWlD,WAAWxR,KAAKqT,iBACtDrT,KAAK0U,WAAWlD,WAAWmD,OAAO3U,KAAKqT,gBAAiB,GACxDuF,EAAclX,UAAUC,IAAI,gBAC5B3B,KAAK0U,WAAWlD,WAAWhQ,SAAQ,SAAA4K,GAAQ,OAAAA,EAAK1K,UAAUC,IAAI,sBAC9D3B,KAAK4U,qBAAqB5U,KAAKqF,KAAMrF,KAAKqT,kBAG5C,YAAAoB,aAAA,SAAa/C,GACIA,EAAKvN,OAERmN,QAAQ,OACpBtR,KAAK+T,kBAAkBrC,EAAKvE,QAG9B,YAAA6K,eAAA,SAAelC,EAAoBpW,EAAiBqW,EAAmBtW,GACvD,IAAI,EAAcqW,EAAOC,EAAWtW,GAAWQ,KACvDgC,UAAYvC,GAGpB,YAAAmZ,mBAAA,SAAmBpC,GACG,IAAI5I,MAAM,kDAAkD4I,GACpElI,QAGd,YAAAkH,uBAAA,SAAuBC,EAA+BxC,GAAtD,WACElT,KAAKgY,eAAetC,EAAkB,sBAAuB,KAAM,oCAEnE,IAAME,EAAmC,GACzC1C,EAAiBE,MAAM5R,SAAQ,SAAA4K,GAC7BwJ,EAAkB9D,KAAK1F,EAAK4I,YAGT,IAAI,EAAcU,EAAkB,OAAQ,uBAAuBzV,KAC3E2T,UAAYiC,OAAOD,EAAkBxI,QAE7B,IAAI,GAAKsI,EAAkBE,GAAmB,SAAAlE,GAAQ,SAAKmH,mBAC9E3F,EAAiBE,MAAM1B,EAAKvE,OAAOgB,UAExB4D,gBAAgB,8BAA+B,gBAG9D,YAAAiE,yBAAA,SAAyBN,EAA+BxC,GAAxD,WACElT,KAAKgY,eAAetC,EAAkB,oBAAqB,KAAM,sCAEjE,IAAMO,EAAqC,GAC3C/C,EAAiBC,QAAQ3R,SAAQ,SAAA4K,GAC/B6J,EAAoBnE,KAAK1F,EAAK4I,YAGX,IAAI,EAAcU,EAAkB,OAAQ,yBAAyBzV,KAC7E2T,UAAYiC,OAAOI,EAAoB7I,QAE7B,IAAI,GACzBsI,EACAO,GACA,SAAAvE,GAAQ,SAAKmH,mBAAmB3F,EAAiBC,QAAQzB,EAAKvE,OAAOgB,UAExD4D,gBAAgB,gCAAiC,gBAGlE,YAAA+G,uBAAA,WACE9Y,KAAKwU,cAActU,UACnBF,KAAKiT,gBAAkB,KACvBjT,KAAKqT,gBAAkB,KACvBrT,KAAKsT,aAAc,EACnBtT,KAAK+R,mBAGP,YAAAoE,YAAA,SAAYjD,GAAZ,WACElT,KAAKwU,cAActU,UACnBF,KAAKwU,cAAgB,IAAI,EAAcxU,KAAKC,KAAM,MAAO,wBAEzDD,KAAKgY,eAAehY,KAAKwU,cAAcvU,KAAM,SAAU,KAAM,2BAE7D,IAAMyV,EAAmB,IAAI,EAAc1V,KAAKwU,cAAcvU,KAAM,MAAO,kCAAkCA,KAE7GD,KAAKgY,eAAetC,EAAkB,aAAc,KAAM,6BAC1D1V,KAAKgY,eAAetC,EAAkB,WAAW1V,KAAK0Y,SAASvB,MAAK,SAAU,KAAM,cAEpFnX,KAAKyV,uBAAuBC,EAAkBxC,GAC9ClT,KAAKgW,yBAAyBN,EAAkBxC,GAEhD,IAAM/Q,EAAmB,IAAI,EAAcuT,EAAkB,MAAO,qBAAqBzV,KAEjE,IAAI,EAAckC,EAAkB,SAAU,sBD1Jf,eC0JyDlC,KAChGsC,iBAAiB,SAAS,WAAM,SAAKuW,4BAE9B,IAAI,EAAc3W,EAAkB,SAAU,sBD7Ja,WC6JkClC,KACrGsC,iBAAiB,SAAS,WACvCM,OAAOC,SAAShC,KAAO,gBAI3B,YAAA6X,kBAAA,sBACE,GAAK3Y,KAAKsT,YAmBRtT,KAAK0Y,SAASb,sBAnBO,CACrB7X,KAAKwU,cAActU,UACnBF,KAAKwU,cAAgB,IAAI,EAAcxU,KAAKC,KAAM,MAAO,sBACzDD,KAAKgY,eAAehY,KAAKwU,cAAcvU,KAAM,SAAU,KAAM,2BAC7DD,KAAK0Y,SAAW,IAAI,GAAS1Y,KAAKwU,cAAcvU,KAAMD,KAAKqW,WAAW,WAAM,SAAKF,YAAY,EAAKuC,SAASxF,qBAC3GlT,KAAK0Y,SAASH,uBACdvY,KAAK0Y,SAAST,cACdjY,KAAK0Y,SAASX,gBAEd,IAAM5V,EAAmB,IAAI,EAAcnC,KAAKwU,cAAcvU,KAAM,MAAO,qBAErE,EAAc,IAAI,EAAckC,EAAiBlC,KAAM,SAAU,mCD/K2B,WC+K4BA,KAC9H,EAAYsC,iBAAiB,SAAS,WAAM,SAAKmW,SAAS7D,gBAAgB,EAAK6D,SAAS5B,kBAAmB,EAAY7U,cAEvH,IAAM,EAAgB,IAAI,EAAcE,EAAiBlC,KAAM,SAAU,sCDlL6C,SCkLeA,KACrI,EAAcsC,iBAAiB,SAAS,WAAM,SAAKmW,SAAS7D,gBAAgB,EAAK6D,SAAS5B,kBAAmB,EAAc7U,cAE3HjC,KAAKsT,aAAc,IAMvB,YAAAvB,gBAAA,sBACE/R,KAAKwU,cAAgB,IAAI,EAAcxU,KAAKC,KAAM,MAAO,eAEzDD,KAAKgY,eAAehY,KAAKwU,cAAcvU,KAAM,SAAU,KAAM,cAC7DD,KAAKgY,eAAehY,KAAKwU,cAAcvU,KAAM,gDAAiD,IAAK,4BAEjF,IAAI,EAAcD,KAAKwU,cAAcvU,KAAM,OAAQ,uBAAuBA,KAClFgC,UAAY,6BAEtBjC,KAAK0U,WAAa,IAAI,GAAK1U,KAAKwU,cAAcvU,KAAM,IAAmB,SAAA0W,GAAS,SAAKlC,aAAakC,MAClG3W,KAAK0U,WAAW3C,gBAAgB,4BAA6B,6BAEzC,IAAI,EAAc/R,KAAKwU,cAAcvU,KAAM,SAAU,qBDvMpE,UCuM6GA,KACtGsC,iBAAiB,SAAS,WACP,OAAzB,EAAK8Q,iBACT,EAAKsF,wBAGX,EAtMA,CAAyB,GAwMzB,2eChMA,SAZA,YACE,WAAYpZ,EAAyBgB,UACnC,YAAMhB,EAAYgB,IAAG,KAQzB,OAVyB,QAKb,YAAA6K,WAAV,WACE,IAAMS,EAAO,IAAI,EAAc7L,KAAKT,WAAY,OAAQ,QAClD+M,EAAgB,IAAI,EAAcT,EAAK5L,KAAM,MAAO,4CAA4CA,KACzF,IAAI,GAAWqM,EAAe,MAAO,kBAEtD,EAVA,CAAyB,GCLlB,IAAMyM,GAA0B,CAAC,2BAA4B,yBAA0B,2fCoF9F,SA9EA,YAGE,WAAYxZ,EAAyBgB,GAArC,MACE,YAAMhB,EAAYgB,IAAG,YACrB,EAAKyY,WAAY,IAuErB,OA5E6B,QAQ3B,YAAArD,YAAA,SAAY1V,GACI,IAAI,EAAcA,EAAM,MAAO,oBAAqB,eAGpE,YAAAgZ,UAAA,SAAUhZ,GAAV,WACQiZ,EAAa,IAAI,EAAcjZ,EAAM,MAAO,mBAAmBA,KAC/DkZ,EAAe,IAAI,EAAcD,EAAY,MAAO,8BAA+B,iBACnFE,EAAc,IAAI,EAAcF,EAAY,MAAO,uBAAwB,gBACjFE,EAAYnZ,KAAKsC,iBAAiB,SAAS,WACpC,EAAKyW,YACR,EAAKK,kBAAkBnZ,UACvB,EAAKoZ,eAAerZ,EAAM,4CAC1BqB,EAAW8X,EAAYnZ,MACvB2B,EAAauX,EAAalZ,MAC1B,EAAK+Y,WAAY,MAGrBG,EAAalZ,KAAKsC,iBAAiB,SAAS,WAC1C,EAAKqJ,wBACD,EAAKoN,YACP1X,EAAW6X,EAAalZ,MACxB2B,EAAawX,EAAYnZ,MACzB,EAAK+Y,WAAY,OAKvB,YAAAM,eAAA,SAAerZ,EAAmBsU,GACf,IAAI,EAActU,EAAM,MAAO,uBAAwB,GAAGsU,IAG7E,YAAAzG,WAAA,SAAW7N,EAAmBI,GAC5B,IAAMkZ,EAAc,IAAI,EAActZ,EAAM,MAAO,oBAAoBA,KACtD,IAAI,EAAcsZ,EAAa,MAAO,mBAAoB,GAAGlZ,GAC9E0Y,GAAcvX,SAAQ,SAAAgY,GACpB,IAAMC,EAAY,IAAI,EAAcF,EAAa,MAAO,0BAA0BtZ,KACrE,IAAI,EAAcwZ,EAAW,MAAO,yBACpC,IAAI,EAAcA,EAAW,MAAO,wBAAyB,GAAGD,OAIjF,YAAAE,gBAAA,SAAgBzZ,GACd,IAAM0Z,EAAkB,IAAI,EAAc1Z,EAAM,MAAO,uBAAuBA,KAC9ED,KAAK8N,WAAW6L,EAAiB,cACjC3Z,KAAK8N,WAAW6L,EAAiB,WAGnC,YAAAC,gBAAA,SAAgB3Z,GACd,IAAM0Z,EAAkB,IAAI,EAAc1Z,EAAM,MAAO,wBAAwBA,KAC/ED,KAAK8N,WAAW6L,EAAiB,KAGnC,YAAAE,iBAAA,SAAiB5Z,GACfD,KAAKqZ,kBAAoB,IAAI,EAAcpZ,EAAM,MAAO,UACxDD,KAAKsZ,eAAetZ,KAAKqZ,kBAAkBpZ,KAAM,yBACjDD,KAAK0Z,gBAAgB1Z,KAAKqZ,kBAAkBpZ,MAC5CD,KAAKsZ,eAAetZ,KAAKqZ,kBAAkBpZ,KAAM,qBACjDD,KAAK4Z,gBAAgB5Z,KAAKqZ,kBAAkBpZ,OAGpC,YAAAmL,WAAV,WACEpL,KAAK6L,KAAO,IAAI,EAAc7L,KAAKT,WAAY,OAAQ,QACvD,IAAM+M,EAAgB,IAAI,EAActM,KAAK6L,KAAK5L,KAAM,MAAO,4CAA4CA,KAC3GD,KAAK2V,YAAYrJ,GACjBtM,KAAKiZ,UAAU3M,GACftM,KAAK6Z,iBAAiBvN,GACtBtM,KAAKmL,OAAOlL,KAAK8Q,MAAM/Q,KAAK6L,KAAK5L,OAErC,EA5EA,CAA6B,GCuB7B,GA7BwB,CACtB,CACEI,KAAM,cACNyZ,WAAY,UACZC,KAAM,gBACNC,aAAc,sYAKhB,CACE3Z,KAAM,mBACNyZ,WAAY,kBACZC,KAAM,cACNC,aAAc,4SAIhB,CACE3Z,KAAM,mBACNyZ,WAAY,SACZC,KAAM,cACNC,aAAc,+xBCoBlB,SApCA,YAGE,WAAYza,EAAyBC,EAAiBC,EAAmBwa,GAAzE,MACE,YAAM1a,EAAYC,EAASC,IAAU,YACrC,EAAKya,gBAAgBD,KA6BzB,OAlCwB,QAQd,YAAAE,cAAR,SAAsBF,GACpB,IAAMG,EAAU,IAAI,EAAiCpa,KAAKwE,QAAS,IAAK,kBAAmByV,EAAQ5Z,MACnG+Z,EAAQna,KAAKa,KAAOuD,EAAc4V,EAAQH,WAC1CM,EAAQna,KAAKkE,OAAS,UAGhB,YAAAkW,sBAAR,SAA8BJ,GACJ,IAAI,EAAcja,KAAKwE,QAAS,IAAK,2BAC7CvE,KAAKgC,UAAYgY,EAAQD,cAGnC,YAAAM,oBAAR,SAA4BL,GAC1Bja,KAAKwE,QAAU,IAAI,EAAcxE,KAAKC,KAAM,MAAO,mBAAmBA,KACtED,KAAKma,cAAcF,GACH,IAAI,EAAcja,KAAKwE,QAAS,IAAK,kBAAmByV,EAAQF,MAChF/Z,KAAKqa,sBAAsBJ,IAGrB,YAAAC,gBAAR,SAAwBD,GACtBja,KAAKsa,oBAAoBL,GACzB,IAAMM,EAAiB,IAAI,EAAcva,KAAKC,KAAM,MAAO,oBAAoBA,KAE3Ega,EAAQ5Z,OAAS,YACnBL,KAAKC,KAAKua,aAAaD,EAAgBva,KAAKwE,UAGlD,EAlCA,CAAwB,keCoBxB,SAnBA,YACE,WAAYjF,EAAyBgB,UACnC,YAAMhB,EAAYgB,IAAG,KAezB,OAjB4B,QAKlB,YAAAka,iBAAR,SAAyBlb,GACvB,YAAwB,SAAA0a,GACJ,IAAI,GAAU1a,EAAY,MAAO,YAAa0a,OAI1D,YAAA7O,WAAV,WACEpL,KAAK6L,KAAO,IAAI,EAAc7L,KAAKT,WAAY,OAAQ,QACvD,IAAM+M,EAAgB,IAAI,EAActM,KAAK6L,KAAK5L,KAAM,MAAO,mDAAmDA,KAChG,IAAI,EAAcqM,EAAe,KAAM,oBAAqB,kBAC9EtM,KAAKya,iBAAiBnO,IAE1B,EAjBA,CAA4B,GCF5B,IAAM,GAAM,ICGZ,WAGE,aACEtM,KAAK4W,UAAYhX,SAASkG,KAuB9B,OApBS,YAAA4U,OAAP,WACM1a,KAAK4W,UAAU3U,YACjBjC,KAAK4W,UAAU3U,UAAY,IAG7B,IAAM0Y,EAAS,CACb,CAAEra,KAAM,YAAqBC,GAAI,UAAmBqa,KAAM,GAC1D,CAAEta,KAAM,gBAAyBC,GAAI,cAAuBqa,KAAM,GAClE,CAAEta,KAAM,iBAA0BC,GAAI,eAAwBqa,KAAM,IACpE,CAAEta,KAAM,cAAuBC,GAAI,YAAqBqa,KAAM,IAC9D,CAAEta,KAAM,kBAA2BC,GAAI,gBAAyBqa,KAAM,IACtE,CAAEta,KAAM,iBAA0BC,GAAI,eAAwBqa,KAAM,KAGhEC,EAAeF,EAAO,GAEtBG,EADmBH,EAAOI,MAAK,SAAAC,GAAS,OAAAnY,OAAOC,SAASxC,KAAKuS,SAASmI,EAAM1a,UAC5Cua,EAErB,IAAIC,EAAUF,KAAK5a,KAAK4W,UAAWkE,EAAUva,KAElE,EA3BA,IDDAX,SAAS2C,iBAAiB,oBAAoB,WAC5C,GAAImY,YAGN7X,OAAON,iBAAiB,cAAc,WACpCqL,EAASK,QACT,GAAIyM","sources":["webpack://my-webpack-project/./src/common-components/base-component.ts","webpack://my-webpack-project/./src/pages/_constants.ts","webpack://my-webpack-project/./src/common-components/logo-app/logo-app.ts","webpack://my-webpack-project/./src/common-components/logo-app/_constants.ts","webpack://my-webpack-project/./src/common-components/header/_constants.ts","webpack://my-webpack-project/./src/services/storage.ts","webpack://my-webpack-project/./src/utils/secondary-functions.ts","webpack://my-webpack-project/./src/common-components/header/header.ts","webpack://my-webpack-project/./src/common-components/logo-rsschool/logo-rsschool.ts","webpack://my-webpack-project/./src/common-components/logo-rsschool/_constants.ts","webpack://my-webpack-project/./src/common-components/footer/_constants.ts","webpack://my-webpack-project/./src/common-components/footer/footer.ts","webpack://my-webpack-project/./src/common-components/cover/cover.ts","webpack://my-webpack-project/./src/services/api.ts","webpack://my-webpack-project/./src/common-components/authorization/_constants.ts","webpack://my-webpack-project/./src/common-components/authorization/authorization.ts","webpack://my-webpack-project/./src/pages/page.ts","webpack://my-webpack-project/./src/pages/home/components/app-feature/app-feature.ts","webpack://my-webpack-project/./src/pages/home/components/app-feature/_constants.ts","webpack://my-webpack-project/./src/pages/home/home.ts","webpack://my-webpack-project/./src/pages/textbook/components/menu/_constants.ts","webpack://my-webpack-project/./src/pages/textbook/components/menu/menu.ts","webpack://my-webpack-project/./src/pages/textbook/components/card/card.ts","webpack://my-webpack-project/./src/pages/textbook/textbook.ts","webpack://my-webpack-project/./src/pages/audio-call/components/list.ts","webpack://my-webpack-project/./src/pages/audio-call/_constants.ts","webpack://my-webpack-project/./src/services/audio-api.ts","webpack://my-webpack-project/./src/pages/audio-call/components/level-data.ts","webpack://my-webpack-project/./src/pages/audio-call/components/game-wrapper.ts","webpack://my-webpack-project/./src/pages/audio-call/audio-call.ts","webpack://my-webpack-project/./src/services/api-sprint.ts","webpack://my-webpack-project/./src/pages/sprint/components/game-view.ts","webpack://my-webpack-project/./src/pages/sprint/components/list.ts","webpack://my-webpack-project/./src/pages/sprint/_constants.ts","webpack://my-webpack-project/./src/pages/sprint/components/game-window.ts","webpack://my-webpack-project/./src/pages/sprint/sprint.ts","webpack://my-webpack-project/./src/pages/statistics/_constants.ts","webpack://my-webpack-project/./src/pages/statistics/statistics.ts","webpack://my-webpack-project/./src/pages/about-team/components/developer/_constants.ts","webpack://my-webpack-project/./src/pages/about-team/components/developer/developer.ts","webpack://my-webpack-project/./src/pages/about-team/about-team.ts","webpack://my-webpack-project/./src/index.ts","webpack://my-webpack-project/./src/app.ts"],"sourcesContent":["class BaseComponent <NodeType extends HTMLElement = HTMLElement> {\n  public node: NodeType;\n\n  constructor(parentNode: HTMLElement | null, tagName = 'div', className = '', content = '') {\n    const element = document.createElement(tagName);\n    element.className = className;\n    element.textContent = content;\n\n    if (parentNode) {\n      parentNode.append(element);\n    }\n\n    this.node = element as NodeType;\n  }\n\n  destroy(): void {\n    this.node.remove();\n  }\n}\n\nexport default BaseComponent;\n","const PAGE_INFO = {\r\n  home: {\r\n    name: 'Главная',\r\n    hash: '#home',\r\n    id: 'home-page'\r\n  },\r\n  textbook: {\r\n    name: 'Электронный учебник',\r\n    hash: '#textbook',\r\n    id: 'textbook-page'\r\n  },\r\n  audioCall: {\r\n    name: 'Аудиовызов',\r\n    hash: '#audio-call',\r\n    id: 'audio-call-page'\r\n  },\r\n  sprint: {\r\n    name: 'Спринт',\r\n    hash: '#sprint',\r\n    id: 'sprint-page'\r\n  },\r\n  statistics: {\r\n    name: 'Статистика',\r\n    hash: '#statistics',\r\n    id: 'statistics-page'\r\n  },\r\n  aboutTeam: {\r\n    name: 'О команде',\r\n    hash: '#about-team',\r\n    id: 'about-team-page'\r\n  },\r\n};\r\n\r\nexport default PAGE_INFO;\r\n","import BaseComponent from 'common-components/base-component';\nimport PAGE_INFO from 'pages/_constants';\nimport LOGO_TEXT from 'common-components/logo-app/_constants';\nimport 'common-components/logo-app/logo-app.scss';\n\nclass Logo extends BaseComponent<HTMLAnchorElement> {\n  constructor(parentNode: HTMLElement, tagName: string, className: string) {\n    super(parentNode, tagName, className);\n    this.createLogo();\n    this.node.href = PAGE_INFO.home.hash;\n  }\n\n  private createLogo(): void {\n    const logoImage = new BaseComponent<HTMLImageElement>(this.node, 'div', 'logo-app__image');\n    const logoText = new BaseComponent<HTMLElement>(this.node, 'span', 'logo-app__text', LOGO_TEXT);\n  }\n}\n\nexport default Logo;\n","const LOGO_TEXT = 'RS Lang';\r\n\r\nexport default LOGO_TEXT;\r\n","const DE_AUTH_BTN = {\r\n  NAME: 'Выйти',\r\n  TIME_HIDE: 2000,\r\n};\r\n\r\nexport default DE_AUTH_BTN;\r\n","import { ITextbookStore } from 'types/interfaces';\r\n\r\nconst STORAGE_USER_KEYS = ['userName', 'authToken', 'authRefreshToken', 'userId'];\r\n\r\nexport const saveUserData = (userAuthData: { [type: string]: string }): void => {\r\n  STORAGE_USER_KEYS.forEach(key => localStorage.setItem(key, userAuthData[key]))\r\n};\r\n\r\nexport const deleteUserData = (): void => {\r\n  STORAGE_USER_KEYS.forEach(key => localStorage.removeItem(key));\r\n};\r\n\r\nexport const getTextbookStore = (): ITextbookStore => {\r\n  return {\r\n    curDifficultyLevel: +localStorage.getItem('curDifficultyLevel') || 0,\r\n    curPageNumber: +localStorage.getItem('curPageNumber') || 1,\r\n    totalPageCount: 30\r\n  };\r\n}\r\n","export const makeActive = (...elements: HTMLElement[]): void => {\r\n  elements.forEach(elem => {\r\n    elem.classList.add('active');\r\n  });\r\n};\r\n\r\nexport const makeInactive = (...elements: HTMLElement[]): void => {\r\n  elements.forEach(elem => {\r\n    elem.classList.remove('active');\r\n  });\r\n};\r\n","import BaseComponent from 'common-components/base-component';\nimport Logo from 'common-components/logo-app/logo-app';\nimport DE_AUTH_BTN from 'common-components/header/_constants';\nimport PAGE_INFO from 'pages/_constants';\nimport { deleteUserData } from 'services/storage';\nimport { IPageData } from 'types/interfaces';\nimport { makeActive, makeInactive } from 'utils/secondary-functions';\nimport 'common-components/header/header.scss';\n\nclass Header extends BaseComponent {\n  public menu: HTMLElement;\n  public burgerMenu: HTMLElement;\n  private authBtn: HTMLElement;\n  private deAuthBtn: HTMLElement;\n  private welcome: HTMLElement;\n  public onBurgerMenu: () => void;\n  public onAuthButton: () => void;\n\n  constructor(parentNode: HTMLElement, tagName: string, className: string) {\n    super(parentNode, tagName, className);\n    this.createHeader();\n  }\n\n  private createUserWelcome(parentNode: HTMLElement, userName: string): void {\n    this.welcome = new BaseComponent(parentNode, 'span', 'user__welcome').node;\n\n    if (userName) {\n      this.welcome.innerHTML = `Привет, ${userName}!`;\n      makeActive(this.welcome);\n    }\n  }\n\n  private createUserButtons(parentNode: HTMLElement): void {\n    const buttonsContainer = new BaseComponent(parentNode, 'div', 'user__buttons-container').node;\n    this.authBtn = new BaseComponent(buttonsContainer, 'button', 'user__authorization-btn').node;\n    this.deAuthBtn = new BaseComponent(buttonsContainer, 'button', 'user__deauthorization-btn', DE_AUTH_BTN.NAME).node;\n  }\n\n  private handleAuthBtnClick(userName: string): void {\n    this.authBtn.addEventListener('click', () => {\n      if (userName) {\n        makeActive(this.deAuthBtn);\n        setTimeout(() => {\n          makeInactive(this.deAuthBtn);\n        }, DE_AUTH_BTN.TIME_HIDE);\n        return;\n      }\n\n      this.onAuthButton();\n    });\n  }\n\n  private handleDeAuthBtnClick(): void {\n    this.deAuthBtn.addEventListener('click', () => {\n      deleteUserData();\n      window.location.hash = window.location.hash === PAGE_INFO.home.hash ? '#' : PAGE_INFO.home.hash;\n    });\n  }\n\n  private createUser(parentNode: HTMLElement, userName: string): void {\n    const user = new BaseComponent(parentNode, 'div', 'user').node;\n    this.createUserWelcome(user, userName);\n    this.createUserButtons(user);\n    this.handleAuthBtnClick(userName);\n    this.handleDeAuthBtnClick();\n  }\n\n  private showHideMenu(): void {\n    if (this.burgerMenu.classList.contains('active')) {\n      makeInactive(this.burgerMenu, this.menu);\n    } else {\n      makeActive(this.burgerMenu, this.menu);\n    }\n  }\n\n  private handleBurgerMenuClick(): void {\n    this.burgerMenu.addEventListener('click', () => {\n      this.showHideMenu();\n      this.onBurgerMenu();\n    });\n  }\n\n  private createBurgerMenu(parentNode: HTMLElement): void {\n    this.burgerMenu = new BaseComponent(parentNode, 'button', 'burger-menu').node;\n    const burgerMenuLines = new BaseComponent(this.burgerMenu, 'span', 'burger-menu__lines');\n    this.handleBurgerMenuClick();\n  }\n\n  private highlightActiveMenuLink(menuLink: HTMLAnchorElement, menuItemData: IPageData): void {\n    const currPageHash = window.location.hash;\n\n    if (currPageHash === menuLink.hash) {\n      makeActive(menuLink);\n    } else if (!currPageHash && menuItemData.name === PAGE_INFO.home.name) {\n      makeActive(menuLink);\n    }\n  }\n\n  private createMenuList(parentNode: HTMLElement, userName: string): void {\n    const menuList = new BaseComponent(parentNode, 'ul', 'menu__list').node;\n    const menuData = Object.values(PAGE_INFO);\n    menuData.forEach(menuItemData => {\n      const menuItem = new BaseComponent(menuList, 'li', 'menu__item').node;\n      const menuLink = new BaseComponent<HTMLAnchorElement>(menuItem, 'a', 'menu__link', menuItemData.name).node;\n      menuLink.href = menuItemData.hash;\n\n      if (userName && menuItemData.name === PAGE_INFO.statistics.name) {\n        makeActive(menuItem);\n      }\n\n      this.highlightActiveMenuLink(menuLink, menuItemData);\n    });\n  }\n\n  private createMenu(parentNode: HTMLElement, userName: string): void {\n    this.menu = new BaseComponent(parentNode, 'nav', 'menu').node;\n    this.createMenuList(this.menu, userName);\n  }\n\n  private createHeader(): void {\n    const userName = localStorage.getItem('userName');\n    const headerContainer = new BaseComponent(this.node, 'div', 'container header__container').node;\n    const logo = new Logo(headerContainer, 'a', 'logo-app');\n    this.createUser(headerContainer, userName);\n    this.createBurgerMenu(headerContainer);\n    this.createMenu(headerContainer, userName);\n  }\n}\n\nexport default Header;\n","import BaseComponent from 'common-components/base-component';\nimport LOGO_RSSCHOOL_HREF from 'common-components/logo-rsschool/_constants';\nimport 'common-components/logo-rsschool/logo-rsschool.scss';\n\nclass LogoRsschool extends BaseComponent<HTMLAnchorElement> {\n  constructor(parentNode: HTMLElement, tagName: string, className: string) {\n    super(parentNode, tagName, className);\n    this.node.href = LOGO_RSSCHOOL_HREF;\n    this.node.target = '_blank';\n  }\n}\n\nexport default LogoRsschool;\n","const LOGO_RSSCHOOL_HREF = 'https://rs.school/js/';\r\n\r\nexport default LOGO_RSSCHOOL_HREF;\r\n","export const GITHUB_NAMES = ['ckachok', 'k1ndum', 'valeriakarimova'];\r\n\r\nexport const GITHUB_HREF = 'https://github.com/';\r\n","import BaseComponent from 'common-components/base-component';\nimport LogoRsschool from 'common-components/logo-rsschool/logo-rsschool';\nimport { GITHUB_HREF, GITHUB_NAMES } from 'common-components/footer/_constants';\nimport 'common-components/footer/footer.scss';\n\nclass Footer extends BaseComponent {\n  private footerContainer: BaseComponent<HTMLElement>;\n\n  constructor(parentNode: HTMLElement, tagName: string, className: string) {\n    super(parentNode, tagName, className);\n    this.createFooter();\n  }\n\n  private createDevInfo(parentNode: HTMLElement): void {\n    const devInfo = new BaseComponent(parentNode, 'div', 'dev-info').node;\n    const year = new BaseComponent(devInfo, 'span', 'dev-info__year', '2022');\n    const githubIcon = new BaseComponent(devInfo, 'div', 'dev-info__github-icon');\n    const developers = new BaseComponent(devInfo, 'div', 'dev-info__developers').node;\n\n    GITHUB_NAMES.forEach(name => {\n      const developerName = new BaseComponent<HTMLAnchorElement>(developers, 'a', 'dev-info__developer', name);\n      developerName.node.href = GITHUB_HREF + name;\n      developerName.node.target = '_blank';\n    });\n  }\n\n  private createFooter(): void {\n    this.footerContainer = new BaseComponent(this.node, 'div', 'container footer__container');\n    const logoRsschool = new LogoRsschool(this.footerContainer.node, 'a', 'logo-rsschool');\n    this.createDevInfo(this.footerContainer.node);\n  }\n}\n\nexport default Footer;\n","import BaseComponent from 'common-components/base-component';\r\nimport 'common-components/cover/cover.scss';\r\n\r\nclass Cover extends BaseComponent {\r\n  public onCover: () => void;\r\n\r\n  constructor(parentNode: HTMLElement, tagName: string, className: string) {\r\n    super(parentNode, tagName, className);\r\n    this.handleCoverClick();\r\n  }\r\n\r\n  private handleCoverClick(): void {\r\n    this.node.addEventListener('click', () => {\r\n      this.node.classList.remove('active');\r\n      this.onCover();\r\n    });\r\n  }\r\n}\r\n\r\nexport default Cover;\r\n","import {\r\n  INewTokens,\r\n  IUserRegRequest,\r\n  IUserAuthRequest,\r\n  IUserData,\r\n  IUserRegData,\r\n  IInputDataUserWord,\r\n  IUserWordRequest,\r\n  IWordData,\r\n  IOutputDataUserWord,\r\n  IAggregatedWords,\r\n  IAggregatedWordsRequest,\r\n  IAggregatedWordData,\r\n  IAggregatedWordRequest\r\n} from 'types/interfaces';\r\n\r\nexport const BASE = 'https://react-learnwords-example.herokuapp.com';\r\n\r\nconst ENDPOINT = {\r\n  WORDS: '/words',\r\n  USERS: '/users',\r\n  SIGNIN: '/signin',\r\n  TOKENS: '/tokens',\r\n  AGGREGATED_WORDS: '/aggregatedWords'\r\n};\r\n\r\nconst ERROR = {\r\n  REG_USER: 'Пользователь с таким адресом электронной почты уже существует',\r\n  AUTH_USER_EMAIL: 'Пользователя с таким адресом электронной почты не существует',\r\n  AUTH_USER_PASSWORD: 'Неправильный пароль пользователя',\r\n  USER_WORD: 'Такого пользовательского слова не существует'\r\n};\r\n\r\nclass ApiLearnWords {\r\n  private token: string;\r\n  private refreshToken: string;\r\n\r\n  constructor() {\r\n    this.token = localStorage.getItem('authToken');\r\n    this.refreshToken = localStorage.getItem('authRefreshToken');\r\n  }\r\n\r\n  public async getWords(group: number, page: number): Promise<IWordData[]> {\r\n    const resp = await fetch(`${BASE}${ENDPOINT.WORDS}?group=${group}&page=${page}`);\r\n    return resp.json();\r\n  }\r\n\r\n  public async getWord(id: string): Promise<IWordData> {\r\n    const resp = await fetch(`${BASE}${ENDPOINT.WORDS}/${id}`);\r\n    return resp.json();\r\n  }\r\n\r\n  public async registerNewUser(userData: IUserData): Promise<IUserRegRequest> {\r\n    const resp = await fetch(`${BASE}${ENDPOINT.USERS}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(userData)\r\n    });\r\n\r\n    return resp.status === 417 ? { error: ERROR.REG_USER } : { success: await resp.json() };\r\n  }\r\n\r\n  public async authorizeUser(userData: IUserData): Promise<IUserAuthRequest> {\r\n    const resp = await fetch(`${BASE}${ENDPOINT.SIGNIN}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(userData)\r\n    });\r\n\r\n    if (resp.status === 404) {\r\n      return { error: ERROR.AUTH_USER_EMAIL };\r\n    }\r\n\r\n    if (resp.status === 403) {\r\n      return { error: ERROR.AUTH_USER_PASSWORD };\r\n    }\r\n\r\n    return { success: await resp.json() };\r\n  }\r\n\r\n  public async getNewUserToken(userId: string): Promise<void> {\r\n    const resp = await fetch(`${BASE}${ENDPOINT.USERS}/${userId}${ENDPOINT.TOKENS}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${this.refreshToken}`,\r\n        Accept: 'application/json',\r\n      }\r\n    });\r\n    const newTokens: INewTokens = await resp.json();\r\n    localStorage.setItem('authToken', newTokens.token);\r\n    localStorage.setItem('authRefreshToken', newTokens.refreshToken);\r\n  }\r\n\r\n  public async getUser(userId: string): Promise<IUserRegData> {\r\n    const resp = await fetch(`${BASE}${ENDPOINT.USERS}/${userId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${this.token}`,\r\n        Accept: 'application/json',\r\n      }\r\n    });\r\n\r\n    if (resp.status === 401) {\r\n      await this.getNewUserToken(userId);\r\n      await new ApiLearnWords().getUser(userId);\r\n    }\r\n\r\n    return resp.json();\r\n  }\r\n\r\n  public async createUserWord(userId: string, wordId: string, wordData: IInputDataUserWord): Promise<void> {\r\n    const resp = await fetch(`${BASE}${ENDPOINT.USERS}/${userId}${ENDPOINT.WORDS}/${wordId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${this.token}`,\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(wordData)\r\n    });\r\n\r\n    if (resp.status === 401) {\r\n      await this.getNewUserToken(userId);\r\n      await new ApiLearnWords().createUserWord(userId, wordId, wordData);\r\n    }\r\n  }\r\n\r\n  public async getUserWord(userId: string, wordId: string): Promise<IUserWordRequest> {\r\n    const resp = await fetch(`${BASE}${ENDPOINT.USERS}/${userId}${ENDPOINT.WORDS}/${wordId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${this.token}`,\r\n        Accept: 'application/json'\r\n      }\r\n    });\r\n\r\n    if (resp.status === 401) {\r\n      await this.getNewUserToken(userId);\r\n      await new ApiLearnWords().getUserWord(userId, wordId);\r\n    }\r\n\r\n    if (resp.status === 404) {\r\n      return { error: ERROR.USER_WORD };\r\n    }\r\n\r\n    const data: IInputDataUserWord = await resp.json();\r\n    return { success: { difficulty: data.difficulty, optional: data.optional } };\r\n  }\r\n\r\n  public async updateUserWord(userId: string, wordId: string, wordData: IInputDataUserWord): Promise<void> {\r\n    const resp = await fetch(`${BASE}${ENDPOINT.USERS}/${userId}${ENDPOINT.WORDS}/${wordId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        Authorization: `Bearer ${this.token}`,\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(wordData)\r\n    });\r\n\r\n    if (resp.status === 401) {\r\n      await this.getNewUserToken(userId);\r\n      await new ApiLearnWords().updateUserWord(userId, wordId, wordData);\r\n    }\r\n  }\r\n\r\n  public async deleteUserWord(userId: string, wordId: string): Promise<void> {\r\n    const resp = await fetch(`${BASE}${ENDPOINT.USERS}/${userId}${ENDPOINT.WORDS}/${wordId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        Authorization: `Bearer ${this.token}`,\r\n        Accept: 'application/json',\r\n      },\r\n    });\r\n\r\n    if (resp.status === 401) {\r\n      await this.getNewUserToken(userId);\r\n      await new ApiLearnWords().deleteUserWord(userId, wordId);\r\n    }\r\n  }\r\n\r\n  private updateUserWordData(userWordData: IInputDataUserWord, wordData: IInputDataUserWord): void {\r\n    userWordData.difficulty = wordData.difficulty || userWordData.difficulty;\r\n    userWordData.optional.isLearned = wordData.optional.isLearned || userWordData.optional.isLearned;\r\n    userWordData.optional.isNew = wordData.optional.isNew || userWordData.optional.isNew;\r\n  }\r\n\r\n  public async saveUserWord(userId: string, wordId: string, wordData: IInputDataUserWord): Promise<void> {\r\n    let userWordData = (await this.getUserWord(userId, wordId)).success;\r\n\r\n    if (userWordData) {\r\n      this.updateUserWordData(userWordData, wordData);\r\n      await this.updateUserWord(userId, wordId, userWordData);\r\n    } else {\r\n      userWordData = { difficulty: 'easy', optional: { isLearned: false, isNew: false } };\r\n      this.updateUserWordData(userWordData, wordData);\r\n      await this.createUserWord(userId, wordId, userWordData);\r\n    }\r\n  }\r\n\r\n  public async getAllUserWords(userId: string): Promise<IOutputDataUserWord[]> {\r\n    const resp = await fetch(`${BASE}${ENDPOINT.USERS}/${userId}${ENDPOINT.WORDS}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${this.token}`,\r\n        Accept: 'application/json',\r\n      },\r\n    });\r\n\r\n    if (resp.status === 401 || resp.status === 402) {\r\n      await this.getNewUserToken(userId);\r\n      await new ApiLearnWords().getAllUserWords(userId);\r\n    }\r\n\r\n    return resp.json();\r\n  }\r\n\r\n  public async getAggregatedWords(userId: string, filter: string, wordsPerPage?: string): Promise<IAggregatedWordsRequest> {\r\n    const requestParams = wordsPerPage ? `?wordsPerPage=${wordsPerPage}&filter=${filter}` : `?filter=${filter}`;\r\n    const resp = await fetch(`${BASE}${ENDPOINT.USERS}/${userId}${ENDPOINT.AGGREGATED_WORDS}${requestParams}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${this.token}`,\r\n        Accept: 'application/json',\r\n      },\r\n    });\r\n\r\n    if (resp.status === 401) {\r\n      await this.getNewUserToken(userId);\r\n      await new ApiLearnWords().getAggregatedWords(userId, filter, wordsPerPage);\r\n    }\r\n\r\n    const data: IAggregatedWords[] = await resp.json();\r\n    return { set: data[0].paginatedResults, count: data[0].totalCount[0].count };\r\n  }\r\n\r\n  public async getAggregatedWord(userId: string, wordId: string): Promise<IAggregatedWordRequest> {\r\n    const resp = await fetch(`${BASE}${ENDPOINT.USERS}/${userId}${ENDPOINT.AGGREGATED_WORDS}/${wordId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${this.token}`,\r\n        Accept: 'application/json',\r\n      },\r\n    });\r\n\r\n    if (resp.status === 401) {\r\n      await this.getNewUserToken(userId);\r\n      await new ApiLearnWords().getAggregatedWord(userId, wordId);\r\n    }\r\n\r\n    if (resp.status === 404) {\r\n      return { error: ERROR.USER_WORD };\r\n    }\r\n\r\n    const data: IAggregatedWordData[] = await resp.json();\r\n    return { success: data[0] };\r\n  }\r\n}\r\n\r\nexport default ApiLearnWords;\r\n","export const FIELD_DATA = [\r\n  {\r\n    name: 'имя пользователя',\r\n    type: 'text',\r\n    pattern: '^(?=.{3,15}$)[a-zA-ZA-я]+[a-zA-ZA-я]+$',\r\n    title: 'Имя должно содержать от 3 до 15 символов латинского и/или русского алфавита',\r\n    required: false\r\n  },\r\n  {\r\n    name: 'адрес электронной почты',\r\n    type: 'email',\r\n    pattern: '([a-z0-9_-]{3,15})@([a-z]{4,}).([a-z]{2,})',\r\n    title: `Email должен быть вида username@example.com, где: \r\n    - username - должно содержать от 3 до 15 символов (латинские буквы, цифры, знак подчёркивания, дефис);\r\n    - example - домен первого уровня состоит минимум из 4 латинских букв;\r\n    - com - домен верхнего уровня, отделяется от домена первого уровня точкой и состоит минимум из 2 латинских букв.`,\r\n    required: true\r\n  },\r\n  {\r\n    name: 'пароль',\r\n    type: 'password',\r\n    pattern: '^(?=.{8,16}$)[0-9A-z]+[0-9A-z]+$',\r\n    title: 'Пароль должен содержать от 8 до 16 символов (латинские буквы и/или цифры)',\r\n    required: true\r\n  }\r\n];\r\n\r\nexport const SWITCH_BUTTONS_NAMES = {\r\n  authorization: 'Авторизация',\r\n  registration: 'Регистрация'\r\n};\r\n\r\nexport const SUBMIT_BUTTON_NAMES = {\r\n  login: 'Войти',\r\n  register: 'Зарегистрироваться'\r\n};\r\n\r\nexport const REG_SUCCESSFUL_MESSAGE = 'Пользователь успешно создан, пройдите авторизацию';\r\n","import BaseComponent from 'common-components/base-component';\r\nimport ApiLearnWords from 'services/api';\r\nimport PAGE_INFO from 'pages/_constants';\r\nimport {\r\n  FIELD_DATA, REG_SUCCESSFUL_MESSAGE, SUBMIT_BUTTON_NAMES, SWITCH_BUTTONS_NAMES\r\n} from 'common-components/authorization/_constants';\r\nimport { saveUserData } from 'services/storage';\r\nimport { IUserData } from 'types/interfaces';\r\nimport { makeActive, makeInactive } from 'utils/secondary-functions';\r\nimport 'common-components/authorization/authorization.scss';\r\n\r\nclass Authorization extends BaseComponent {\r\n  private inputUserName: HTMLInputElement;\r\n  private inputEmail: HTMLInputElement;\r\n  private inputPassword: HTMLInputElement;\r\n  private authSwitchButton: HTMLElement;\r\n  private regSwitchButton: HTMLElement;\r\n  private authSubmitButton: HTMLElement;\r\n  private regSubmitButton: HTMLElement;\r\n  private message: HTMLElement;\r\n\r\n  constructor(parentNode: HTMLElement, tagName: string, className: string) {\r\n    super(parentNode, tagName, className);\r\n    this.createAuthorization();\r\n  }\r\n\r\n  private handleAuthSwitchBtnClick(): void {\r\n    this.authSwitchButton.addEventListener('click', () => {\r\n      makeActive(this.authSwitchButton, this.authSubmitButton);\r\n      makeInactive(this.regSwitchButton, this.inputUserName.parentElement, this.regSubmitButton, this.message);\r\n      this.inputUserName.required = false;\r\n    });\r\n  }\r\n\r\n  private handleRegSwitchBtnClick(): void {\r\n    this.regSwitchButton.addEventListener('click', () => {\r\n      makeActive(this.regSwitchButton, this.inputUserName.parentElement, this.regSubmitButton);\r\n      makeInactive(this.authSwitchButton, this.authSubmitButton, this.message);\r\n      this.inputUserName.required = true;\r\n    });\r\n  }\r\n\r\n  private createAuthorizationControls(): void {\r\n    const controls = new BaseComponent(this.node, 'div', 'authorization__controls').node;\r\n    this.authSwitchButton = new BaseComponent(controls, 'button', 'authorization__button active', SWITCH_BUTTONS_NAMES.authorization).node;\r\n    this.regSwitchButton = new BaseComponent(controls, 'button', 'authorization__button', SWITCH_BUTTONS_NAMES.registration).node;\r\n    this.handleAuthSwitchBtnClick();\r\n    this.handleRegSwitchBtnClick();\r\n  }\r\n\r\n  private createFormField(parentNode: HTMLElement): void {\r\n    [this.inputUserName, this.inputEmail, this.inputPassword] = FIELD_DATA.map(data => {\r\n      const field = new BaseComponent(parentNode, 'div', 'authorization-form__field active').node;\r\n      const fieldName = new BaseComponent(field, 'p', 'authorization-form__field-name', data.name);\r\n      const fieldInput = new BaseComponent<HTMLInputElement>(field, 'input', 'authorization-form__field-input').node;\r\n      fieldInput.type = data.type;\r\n      fieldInput.pattern = data.pattern;\r\n      fieldInput.title = data.title;\r\n      fieldInput.required = data.required;\r\n      return fieldInput;\r\n    });\r\n    makeInactive(this.inputUserName.parentElement);\r\n  }\r\n\r\n  private getFormFieldValues(): IUserData {\r\n    const [name, email, password] = [this.inputUserName.value, this.inputEmail.value, this.inputPassword.value];\r\n    return { name, email, password };\r\n  }\r\n\r\n  private isInputFieldsValid(): boolean {\r\n    const isUserNameValid = this.inputUserName.validity.valid;\r\n    const isEmailValid = this.inputEmail.validity.valid;\r\n    const isPasswordValid = this.inputPassword.validity.valid;\r\n    return isUserNameValid && isEmailValid && isPasswordValid;\r\n  }\r\n\r\n  private async performUserRegistration(): Promise<void> {\r\n    const userData = this.getFormFieldValues();\r\n    const userRegRequest = await new ApiLearnWords().registerNewUser(userData);\r\n    this.message.innerHTML = userRegRequest.error ? userRegRequest.error : REG_SUCCESSFUL_MESSAGE;\r\n    makeActive(this.message);\r\n  }\r\n\r\n  private handleRegSubmitBtnClick(): void {\r\n    this.regSubmitButton.addEventListener('click', async event => {\r\n      if (this.isInputFieldsValid()) {\r\n        event.preventDefault();\r\n        await this.performUserRegistration();\r\n      }\r\n    });\r\n  }\r\n\r\n  private async performUserAuthorization(): Promise<void> {\r\n    const userData = this.getFormFieldValues();\r\n    const userAuthRequest = await new ApiLearnWords().authorizeUser(userData);\r\n\r\n    if (userAuthRequest.error) {\r\n      this.message.innerHTML = userAuthRequest.error;\r\n      makeActive(this.message);\r\n    } else {\r\n      const storageUserData = {\r\n        authToken: userAuthRequest.success.token,\r\n        authRefreshToken: userAuthRequest.success.token,\r\n        userName: userAuthRequest.success.name,\r\n        userId: userAuthRequest.success.userId\r\n      };\r\n      saveUserData(storageUserData);\r\n      window.location.hash = window.location.hash === PAGE_INFO.home.hash ? '#' : PAGE_INFO.home.hash;\r\n    }\r\n  }\r\n\r\n  private handleAuthSubmitBtnClick(): void {\r\n    this.authSubmitButton.addEventListener('click', async event => {\r\n      if (this.isInputFieldsValid()) {\r\n        event.preventDefault();\r\n        await this.performUserAuthorization();\r\n      }\r\n    });\r\n  }\r\n\r\n  private createAuthorizationForm(): void {\r\n    const form = new BaseComponent<HTMLFormElement>(this.node, 'form', 'authorization-form').node;\r\n    this.createFormField(form);\r\n    this.authSubmitButton = new BaseComponent(form, 'button', 'authorization-form__login-button active', SUBMIT_BUTTON_NAMES.login).node;\r\n    this.regSubmitButton = new BaseComponent(form, 'button', 'authorization-form__register-button', SUBMIT_BUTTON_NAMES.register).node;\r\n    this.message = new BaseComponent(form, 'p', 'authorization-form__message').node;\r\n    this.handleAuthSubmitBtnClick();\r\n    this.handleRegSubmitBtnClick();\r\n  }\r\n\r\n  private createAuthorization(): void {\r\n    const authLogo = new BaseComponent(this.node, 'div', 'authorization__logo');\r\n    this.createAuthorizationControls();\r\n    this.createAuthorizationForm();\r\n  }\r\n}\r\n\r\nexport default Authorization;\r\n","import BaseComponent from 'common-components/base-component';\nimport Header from 'common-components/header/header';\nimport Footer from 'common-components/footer/footer';\nimport Cover from 'common-components/cover/cover';\nimport { makeActive, makeInactive } from 'utils/secondary-functions';\nimport Authorization from 'common-components/authorization/authorization';\n\nabstract class Page {\n  protected parentNode: HTMLElement;\n  protected header: Header;\n  protected main: BaseComponent<HTMLElement>;\n  protected footer: Footer;\n  private cover: Cover;\n  private authorization: Authorization;\n\n  constructor(parentNode: HTMLElement, id: string) {\n    this.parentNode = parentNode;\n    this.parentNode.id = id;\n    this.header = new Header(this.parentNode, 'header', 'header');\n    this.createMain();\n    this.footer = new Footer(this.parentNode, 'footer', 'footer');\n    this.cover = new Cover(this.parentNode, 'div', 'cover');\n    this.authorization = new Authorization(this.parentNode, 'div', 'authorization');\n    this.startMenuInteractionCycle();\n    this.startUserAuthorizationCycle();\n    this.startCoverInteractionCycle();\n  }\n\n  private startUserAuthorizationCycle(): void {\n    this.header.onAuthButton = () => makeActive(this.authorization.node, this.cover.node);\n  }\n\n  private startMenuInteractionCycle(): void {\n    this.header.onBurgerMenu = () => this.cover.node.classList.toggle('active');\n  }\n\n  private startCoverInteractionCycle(): void {\n    this.cover.onCover = () => makeInactive(this.header.menu, this.header.burgerMenu, this.authorization.node);\n  }\n\n  protected startPageRefreshCycle(): void {\n    this.main.destroy();\n    this.createMain();\n  }\n\n  protected createMain(): void {\n    this.main = new BaseComponent(this.parentNode, 'main', 'main');\n    const mainContainer = new BaseComponent(this.main.node, 'div', 'container main__container');\n  }\n}\n\nexport default Page;\n","import BaseComponent from 'common-components/base-component';\r\nimport 'pages/home/components/app-feature/app-feature.scss';\r\n\r\nclass AppFeature extends BaseComponent {\r\n  constructor(parentNode: HTMLElement, tagName: string, className: string, feature: { name: string, desc: string }) {\r\n    super(parentNode, tagName, className);\r\n    this.createFeatureApp(feature);\r\n  }\r\n\r\n  private createFeatureApp(feature: { name: string, desc: string }): void {\r\n    const featureNameContainer = new BaseComponent(this.node, 'div', 'feature__name').node;\r\n    const featureNameText = new BaseComponent(featureNameContainer, 'span', 'feature__name-text', feature.name);\r\n    const featureDesc = new BaseComponent(this.node, 'div', 'feature__desc').node;\r\n    const featureDescText = new BaseComponent(featureDesc, 'span', 'feature__desc-text', feature.desc);\r\n  }\r\n}\r\n\r\nexport default AppFeature;\r\n","const FEATURES = [\r\n  {\r\n    name: 'Описание приложения',\r\n    desc: `RS Lang – приложение для изучения иностранных слов с методикой интервального повторения,\r\n           отслеживанием индивидуального прогресса и мини-играми`\r\n  },\r\n  {\r\n    name: 'Учебник',\r\n    desc: 'Электронный учебник содержит 3600 часто употребляемых английских слов, разбитых на 6 уровней сложности'\r\n  },\r\n  {\r\n    name: 'Игры',\r\n    desc: 'В приложении присутствуют игры - “Аудиовызов” и “Спринт”, помогающие гораздо быстрее усваивать пройденный материал'\r\n  },\r\n  {\r\n    name: 'Статистика',\r\n    desc: 'С помощью статистики  пользователи могут следить за своими успехами и оценивать свои результаты'\r\n  }\r\n];\r\n\r\nexport default FEATURES;\r\n","import BaseComponent from 'common-components/base-component';\nimport Page from 'pages/page';\nimport AppFeature from 'pages/home/components/app-feature/app-feature';\nimport FEATURES from 'pages/home/components/app-feature/_constants';\nimport 'pages/home/home.scss';\n\nclass HomePage extends Page {\n  constructor(parentNode: HTMLElement, id: string) {\n    super(parentNode, id);\n  }\n\n  private createAppFeatures(parentNode: HTMLElement): void {\n    FEATURES.forEach(item => {\n      const feature = new AppFeature(parentNode, 'div', 'feature', item);\n    });\n  }\n\n  private createDecorativeCircles(parentNode: HTMLElement): void {\n    const decorativeSmallCircle = new BaseComponent(parentNode, 'div', 'decorative-circle decorative-circle_small');\n    const decorativeBigCircle = new BaseComponent(parentNode, 'div', 'decorative-circle decorative-circle_big');\n  }\n\n  protected createMain(): void {\n    this.main = new BaseComponent(this.parentNode, 'main', 'main');\n    const mainContainer = new BaseComponent(this.main.node, 'div', 'container main__container home-container').node;\n    this.createAppFeatures(mainContainer);\n    this.createDecorativeCircles(mainContainer);\n  }\n}\n\nexport default HomePage;\n","export const LEVEL_NAMES = ['Уровень 1', 'Уровень 2', 'Уровень 3', 'Уровень 4', 'Уровень 5', 'Уровень 6', 'Сложные слова'];\r\n\r\nexport const TEXTBOOK_GAMES = {\r\n  audioCall: {\r\n    name: 'Аудиовызов',\r\n    hash: '#audio-call/textbook',\r\n    id: 'audio-call-page'\r\n  },\r\n  sprint: {\r\n    name: 'Спринт',\r\n    hash: '#sprint/textbook',\r\n    id: 'sprint-page'\r\n  }\r\n};\r\n","import BaseComponent from 'common-components/base-component';\nimport { LEVEL_NAMES, TEXTBOOK_GAMES } from 'pages/textbook/components/menu/_constants';\nimport { getTextbookStore } from 'services/storage';\nimport { ITextbookStore } from 'types/interfaces';\nimport { makeActive, makeInactive } from 'utils/secondary-functions';\nimport 'pages/textbook/components/menu/menu.scss';\nimport { playback } from '../card/card';\n\nclass TextbookMenu extends BaseComponent {\n  curLevelItem: HTMLElement; //! ключ доступа\n  currPageNumber: HTMLElement; //! ключ доступа\n  onLevelItem: () => void;\n\n  constructor(parentNode: HTMLElement, tagName: string, className: string) {\n    super(parentNode, tagName, className);\n    this.createTextbookMenu();\n  }\n\n  private handleLevelItemClick(levelItem: HTMLElement, indexLevel: number): void {\n    levelItem.addEventListener('click', () => {\n      if (levelItem !== this.curLevelItem) {\n        localStorage.setItem('curDifficultyLevel', indexLevel.toString());\n        localStorage.removeItem('curPageNumber');\n        makeInactive(this.curLevelItem);\n        makeActive(levelItem);\n        this.curLevelItem = levelItem;\n        this.onLevelItem();\n        // document.body.style.backgroundImage = `url(${aaa})`\n        \n      }\n    });\n  }\n\n  private createLevelsNav(store: ITextbookStore): void {\n    const userName = localStorage.getItem('userName');\n    const levelsNav = new BaseComponent(this.node, 'ul', 'levels-nav');\n    LEVEL_NAMES.forEach((name, index) => {\n      const levelItem = new BaseComponent(levelsNav.node, 'li', 'levels-nav__item', name).node;\n      if (index === store.curDifficultyLevel) {\n        makeActive(levelItem);\n        this.curLevelItem = levelItem;\n      }\n\n      if (!userName && index === LEVEL_NAMES.length - 1) {\n        levelItem.classList.add('hidden');\n      }\n\n      if (LEVEL_NAMES.length - 1) {\n        levelItem.addEventListener('click', () => {\n\n        });\n      }\n\n      this.handleLevelItemClick(levelItem, index);\n    });\n  }\n\n  private createGamesNav(): void {\n    const gamesNav = new BaseComponent(this.node, 'div', 'games-nav').node;\n    const gamesNavIcon = new BaseComponent(gamesNav, 'div', 'games-nav__icon');\n    const gamesNavData = Object.values(TEXTBOOK_GAMES);\n    gamesNavData.forEach(gameLinkData => {\n      const gameLink = new BaseComponent<HTMLAnchorElement>(gamesNav, 'a', 'games-nav__link', gameLinkData.name).node;\n      gameLink.href = gameLinkData.hash;\n    });\n  }\n\n  private createPagesCounter(store: ITextbookStore): void {\n    const counter = new BaseComponent(this.node, 'div', 'page-counter').node;\n    this.currPageNumber = new BaseComponent(counter, 'div', 'page-counter__cur', `${store.curPageNumber}`).node;\n    const divider = new BaseComponent(counter, 'div', 'page-counter__divider', '/').node;\n    const totalPageCount = new BaseComponent(counter, 'div', 'page-counter__total', `${store.totalPageCount}`).node;\n  }\n\n  private handleHashChange(): void {\n    window.addEventListener('hashchange', () => {\n      localStorage.removeItem('curDifficultyLevel');\n      localStorage.removeItem('curPageNumber');\n    });\n  }\n\n  private createTextbookMenu(): void {\n    const store = getTextbookStore();\n    this.createLevelsNav(store);\n    this.createGamesNav();\n    this.createPagesCounter(store);\n    this.handleHashChange();\n  }\n}\n\nexport default TextbookMenu;\n","import BaseComponent from 'common-components/base-component';\nimport { IWordData } from 'types/interfaces';\nimport 'pages/textbook/components/card/card.scss';\nimport ApiLearnWords, { BASE } from 'services/api';\nimport { makeActive, makeInactive } from 'utils/secondary-functions';\n\nexport const playback = new Audio();\n\nclass TextbookCard extends BaseComponent {\n  countCorrect: number;\n  countWrong: number;\n  word: string;\n  translaiton: string;\n  transcriptiin: string;\n  definition: string;\n  definitionTranslation: string;\n  example: string;\n  exampleTranslation: string;\n  playback: HTMLAudioElement;\n\n  constructor(parentNode: HTMLElement, tagName: string, className: string, wordData: IWordData) {\n    super(parentNode, tagName, className);\n    // this.playback = new Audio();\n    this.createCard(wordData);\n  }\n\n  handleCardSoundClick(cardSound: HTMLElement, wordData: IWordData) {\n    cardSound.addEventListener('click', () => {\n      if (playback) {\n        playback.pause();\n      }\n      const playList = [wordData.audio, wordData.audioMeaning, wordData.audioExample];\n      playback.src = `${BASE}/${playList[0]}`;\n      playback.play();\n      let current = 0;\n      playback.addEventListener('ended', () => {\n        current++;\n        if (current >= playList.length) {\n          playback.pause();\n        }\n        playback.src = `${BASE}/${playList[current]}`;\n        playback.play();\n      });\n    });\n  }\n\n  private createCardImage(userName: string, wordData: IWordData) {\n    const cardImage = new BaseComponent(this.node, 'div', 'word-card__image').node;\n    cardImage.style.backgroundImage = `url(${BASE}/${wordData.image})`;\n    const cardSound = new BaseComponent(cardImage, 'button', 'word-card__sound').node;\n    this.handleCardSoundClick(cardSound, wordData);\n    const cardAnswers = new BaseComponent(cardImage, 'div', 'word-card__answer-counters').node;\n    const incorrectAnswer = new BaseComponent(cardAnswers, 'span', 'word-card__incorrect-answer', `${this.countCorrect || 0}`);\n    const correctAnswer = new BaseComponent(cardAnswers, 'span', 'word-card__correct-answer', `${this.countWrong || 0}`);\n    if (userName) {\n      incorrectAnswer.node.classList.add('visibility');\n      correctAnswer.node.classList.add('visibility');\n    }\n  }\n\n  createWordControlBtns(userName: string, wordData: IWordData) {\n    const compound = new BaseComponent(this.node, 'button', 'word-card__compound-word').node;\n    const learned = new BaseComponent(this.node, 'button', 'word-card__learned-word').node;\n    if (userName) {\n      compound.classList.add('visibility');\n      learned.classList.add('visibility');\n    }\n    compound.addEventListener('click', async () => {\n      const userId = localStorage.getItem('userId');\n      makeActive(compound);\n      compound.parentElement.classList.add('hard');\n      await new ApiLearnWords().saveUserWord(userId, wordData.id, { difficulty: 'hard', optional: {isLearned: false} });\n   \n    });\n    learned.addEventListener('click', () => {\n      makeActive(learned);\n      makeInactive(compound);\n      learned.parentElement.classList.add('learned');\n      compound.style.pointerEvents = 'none';\n    });\n  }\n\n  private createWord(wordData: IWordData) {\n    const wordContainer = new BaseComponent(this.node, 'div', 'word-card__word-container').node;\n    const word = new BaseComponent(wordContainer, 'div', 'word-card__word', `${wordData.word}`);\n    const translation = new BaseComponent(wordContainer, 'div', 'word-card__translation', `${wordData.wordTranslate}`);\n    const transcription = new BaseComponent(wordContainer, 'div', 'word-card__transcription', `${wordData.transcription}`);\n  }\n\n  private createDefinition(wordData: IWordData) {\n    const defContainer = new BaseComponent(this.node, 'div', 'word-card__definition-container').node;\n    const def = new BaseComponent(defContainer, 'div', 'word-card__text');\n    def.node.innerHTML = wordData.textMeaning;\n    const defTranslation = new BaseComponent(defContainer, 'div', 'word-card__text', `${wordData.textMeaningTranslate}`);\n  }\n\n  private createExample(wordData: IWordData) {\n    const exampleContainer = new BaseComponent(this.node, 'div', 'word-card__example-container').node;\n    const example = new BaseComponent(exampleContainer, 'div', 'word-card__text');\n    example.node.innerHTML = wordData.textExample;\n    const exampleTranslation = new BaseComponent(exampleContainer, 'div', 'word-card__text', `${wordData.textExampleTranslate}`);\n  }\n\n  private createCard(wordData: IWordData) {\n    const userName = localStorage.getItem('userName');\n    this.createCardImage(userName, wordData);\n    this.createWordControlBtns(userName, wordData);\n    this.createWord(wordData);\n    this.createDefinition(wordData);\n    this.createExample(wordData);\n  }\n}\n\nexport default TextbookCard;\n","import BaseComponent from 'common-components/base-component';\nimport Page from 'pages/page';\nimport TextbookMenu from 'pages/textbook/components/menu/menu';\nimport TextbookCard, { playback } from '../textbook/components/card/card';\nimport 'pages/textbook/textbook.scss';\nimport ApiLearnWords from 'services/api';\nimport { getTextbookStore } from 'services/storage';\nimport { IAggregatedWordData, IWordData } from 'types/interfaces';\n\nconst obj = {\n  countCorrect: 0,\n  countWrong: 0,\n  word: 'string',\n  translaiton: 'string',\n  transcriptiin: 'string',\n  definition: 'string',\n  definitionTranslation: 'string',\n  example: 'string',\n  exampleTranslation: 'string'\n};\n\nclass TextbookPage extends Page {\n  private textbookMenu: TextbookMenu;\n  private textbookCard: TextbookCard;\n  constructor(parentNode: HTMLElement, id: string) {\n    super(parentNode, id);\n  }\n\n  handleNextPageClick(nextPage: HTMLElement) {\n    nextPage.addEventListener('click', () => {\n      const storeTextbook = getTextbookStore();\n      if (storeTextbook.curPageNumber === 30) { storeTextbook.curPageNumber = 0 };\n      this.textbookMenu.currPageNumber.innerHTML = (storeTextbook.curPageNumber++).toString();\n      localStorage.setItem('curPageNumber', (storeTextbook.curPageNumber++).toString());\n      this.startPageRefreshCycle();\n    });\n  }\n\n  handlePrevPageClick(prevPage: HTMLElement) {\n    prevPage.addEventListener('click', () => {\n      const storeTextbook = getTextbookStore();\n      if (storeTextbook.curPageNumber === 1) {storeTextbook.curPageNumber = 31};\n      this.textbookMenu.currPageNumber.innerHTML = (storeTextbook.curPageNumber--).toString();\n      localStorage.setItem('curPageNumber', (storeTextbook.curPageNumber--).toString());\n      this.startPageRefreshCycle();\n    });\n  }\n\n  private createPageSwitches(parentNode: HTMLElement): void {\n    const switchesContainer = new BaseComponent(parentNode, 'div', 'textbook__page-switches').node;\n    const prevPage = new BaseComponent(switchesContainer, 'button', 'textbook__prev-page').node;\n    const nextPage = new BaseComponent(switchesContainer, 'button', 'textbook__next-page').node;\n    this.handleNextPageClick(nextPage);\n    this.handlePrevPageClick(prevPage);\n  }\n\n  private async createCards(parentNode: HTMLElement) {\n    const cardsContainer = new BaseComponent(parentNode, 'div', 'textbook__words-container').node;\n    const storeTextbook = getTextbookStore();\n    const data = {\n      group: storeTextbook.curDifficultyLevel,\n      page: storeTextbook.curPageNumber - 1\n    }\n    let words: IWordData[] | IAggregatedWordData[];\n    const userId = localStorage.getItem('userId');\n    if (data.group !== 6) {\n      words = await new ApiLearnWords().getWords(data.group, data.page);\n    } else {\n      words = (await new ApiLearnWords().getAggregatedWords(userId, '{ \"userWord.difficulty\":\"hard\" }', '3600')).set;\n    }\n    // const words = await new ApiLearnWords().getWords(data.group, data.page);\n    words.forEach(async wordData => {\n      const card = new TextbookCard(cardsContainer, 'div', 'word-card', wordData);\n    })\n  }\n\n  protected createMain(): void {\n    this.main = new BaseComponent(this.parentNode, 'main', 'main');\n    const mainContainer = new BaseComponent(this.main.node, 'div', 'container main__container home-container').node;\n    this.textbookMenu = new TextbookMenu(mainContainer, 'div', 'textbook__menu');\n    this.createPageSwitches(mainContainer);\n    this.createCards(mainContainer);\n    this.header.node.after(this.main.node);\n\n    this.textbookMenu.onLevelItem = () => this.startPageRefreshCycle();\n    playback.pause();\n  }\n}\n\nexport default TextbookPage;\n","import BaseComponent from 'common-components/base-component';\nimport { IVariantInfo } from 'types/interfaces';\n\nclass List {\n  private listContainer: BaseComponent<HTMLElement>;\n  public parentNode: HTMLElement;\n  public amount: number;\n  public callback: (info: IVariantInfo) => void;\n  public elements: Array<string>;\n  public itemsArray: Array<HTMLElement>;\n\n  constructor(parentNode: HTMLElement, elements: Array<string>, callback: (info: IVariantInfo) => void) {\n    this.parentNode = parentNode;\n    this.elements = elements;\n    this.amount = elements.length;\n    this.callback = callback;\n  }\n\n  createListItem(className: string): HTMLElement {\n    const listItem = new BaseComponent(this.listContainer.node, 'li', className).node;\n    return listItem;\n  }\n\n  onItemClick(mouseEvent: MouseEvent): void {\n    const target = mouseEvent.target as HTMLElement;\n\n    if (!(target.closest('li'))) return;\n\n    const itemIndex = this.itemsArray.indexOf(target);\n    const element = this.elements[itemIndex];\n\n    const info: IVariantInfo = {\n      index: itemIndex,\n      label: element,\n      target: mouseEvent.target as HTMLElement\n    };\n\n    if (this.callback !== null) {\n      this.callback(info);\n    }\n  }\n\n  createItems(amount: number, className: string): void {\n    this.itemsArray = [];\n\n    for (let i = 0; i < amount; i++) {\n      this.itemsArray.push(this.createListItem(className));\n      this.itemsArray[i].innerHTML = this.elements[i];\n    }\n\n    this.listContainer.node.addEventListener('click', event => this.onItemClick(event));\n  }\n\n  createContainer(className: string, childName: string): BaseComponent<HTMLElement> {\n    this.listContainer = new BaseComponent(this.parentNode, 'ul', className);\n    this.createItems(this.amount, childName);\n    return this.listContainer;\n  }\n}\n\nexport default List;\n","const DIFFICULTY_LEVELS: Array<string> = ['1', '2', '3', '4', '5', '6'];\nconst BUTTON_TEXT = {\n  start: 'Начать', skip: 'Не знаю', next: 'Дальше', again: 'Сыграть ещё', toTextbook: 'Учебник'\n};\n\nexport { DIFFICULTY_LEVELS, BUTTON_TEXT };\n","class Data {\n  async getData(page: number, group: number) {\n    const data = await fetch(\n      `https://react-learnwords-example.herokuapp.com/words?$page=${page}&group=${group}`\n    );\n    const json = await data.json();\n    return json;\n  }\n}\n\nexport default Data;\n","import { IWordData } from 'types/interfaces';\nimport Data from '../../../services/audio-api';\n\nclass LevelData {\n  data: Data;\n\n  constructor() {\n    this.data = new Data();\n  }\n\n  generateRandomNumber(): number {\n    return Math.trunc(Math.random() * 20);\n  }\n\n  async getWordsData(num: number): Promise<any> {\n    const data = await this.data.getData(1, num);\n    return data;\n  }\n\n  generateAnswers(data: Array<IWordData>, answersArray: Array<string>): Array<string> {\n    do {\n      const newWord = data[this.generateRandomNumber()].wordTranslate;\n      if (!answersArray.includes(newWord)) {\n        answersArray.push(newWord);\n      }\n    } while (answersArray.length < 5);\n    return answersArray;\n  }\n}\n\nexport default LevelData;\n","import List from 'pages/audio-call/components/list';\nimport BaseComponent from 'common-components/base-component';\nimport { DIFFICULTY_LEVELS, BUTTON_TEXT } from 'pages/audio-call/_constants';\nimport { IVariantInfo, IUserAnswersCount, IWordData } from 'types/interfaces';\nimport LevelData from 'pages/audio-call/components/level-data';\nimport PAGE_INFO from 'pages/_constants';\n\nclass GameWindow extends BaseComponent {\n  private gameContainer: BaseComponent<HTMLElement>;\n  levelsList: List;\n  levelWords: LevelData;\n  wordsData: Array<IWordData>;\n  answers: Array<string>;\n  levelIndex: number;\n  correctWordData: IWordData;\n  userAnswersCount: IUserAnswersCount;\n  difficultyLevel: number;\n  gameStarted: boolean;\n\n  constructor(parentNode: HTMLElement, tagName: string, className: string) {\n    super(parentNode, tagName, className);\n    this.levelWords = new LevelData();\n    this.addHotKeys();\n    this.createContainer();\n    this.levelIndex = 0;\n    this.correctWordData = null;\n    this.userAnswersCount = { correct: [], wrong: [] };\n    this.difficultyLevel = null;\n    this.gameStarted = false;\n  }\n\n  getVariantInfo(num: number): IVariantInfo {\n    const variantsArray: Array<HTMLElement> = Array.from(document.querySelectorAll('.level-option'));\n    const info : IVariantInfo = {\n      index: num,\n      target: variantsArray[num],\n      label: variantsArray[num].innerText,\n    };\n    return info;\n  }\n\n  addHotKeys(): void {\n    document.addEventListener('keydown', event1 => {\n      if (this.gameStarted === false) {\n        switch (event1.code) {\n          case 'Digit1': this.showSelectedLevel(0);\n            break;\n          case 'Digit2': this.showSelectedLevel(1);\n            break;\n          case 'Digit3': this.showSelectedLevel(2);\n            break;\n          case 'Digit4': this.showSelectedLevel(3);\n            break;\n          case 'Digit5': this.showSelectedLevel(4);\n            break;\n          case 'Digit6': this.showSelectedLevel(5);\n            break;\n        }\n      } else {\n        switch (event1.code) {\n          case 'Digit1': this.onVariantClick(this.getVariantInfo(0));\n            break;\n          case 'Digit2': this.onVariantClick(this.getVariantInfo(1));\n            break;\n          case 'Digit3': this.onVariantClick(this.getVariantInfo(2));\n            break;\n          case 'Digit4': this.onVariantClick(this.getVariantInfo(3));\n            break;\n          case 'Digit5': this.onVariantClick(this.getVariantInfo(4));\n            break;\n        }\n      }\n\n      if (event1.code === 'Space') {\n        this.handleSoundButtonClick(this.correctWordData.audio);\n      }\n\n      const gameButton = document.querySelector('.audio-game__button') as HTMLElement;\n\n      if (event1.code === 'Enter' && this.correctWordData !== null && this.gameStarted === true) {\n        this.handleActionButtonClick(gameButton);\n      }\n\n      if (event1.code === 'Enter' && this.difficultyLevel !== null && this.gameStarted === false) {\n        this.handleStartButtonClick();\n      }\n    });\n  }\n\n  createDescription(text: string): void {\n    const description = new BaseComponent(this.gameContainer.node, 'p', 'audio-game__description').node;\n    description.innerHTML = text;\n  }\n\n  onLevelClick(info: IVariantInfo): void {\n    const target = info.target as HTMLElement;\n\n    if (!target.closest('li')) return;\n    this.showSelectedLevel(info.index);\n  }\n\n  showSelectedLevel(index: number): void {\n    this.difficultyLevel = index;\n    this.levelsList.itemsArray.splice(this.difficultyLevel, 1);\n    this.levelsList.itemsArray.forEach(item => item.classList.add('invisible'));\n    this.generateWordsOptions(this.difficultyLevel);\n  }\n\n  handleUserClick(info: IVariantInfo): void {\n    const userAnswer = info.target as HTMLElement;\n    const answer = {\n      meaning: `<strong>${this.correctWordData.word}</strong> - ${this.correctWordData.wordTranslate}`,\n      audio: this.correctWordData.audio,\n    };\n    if (info.label === this.correctWordData.wordTranslate) {\n      userAnswer.classList.add('correct-answer');\n      this.userAnswersCount.correct.push(answer);\n    } else {\n      userAnswer.classList.add('wrong-answer');\n      this.userAnswersCount.wrong.push(answer);\n    }\n  }\n\n  createAnswerImageText(correctAnswerImage: HTMLElement): void {\n    const correctAnswerText = new BaseComponent(this.gameContainer.node, 'div', 'audio-game__answer-image-text').node;\n\n    const audiIcon = new BaseComponent(correctAnswerText, 'span', 'audio-game__audio-icon').node;\n    audiIcon.addEventListener('click', () => this.handleSoundButtonClick(this.correctWordData.audio));\n\n    const correctAnswerTranscription = new BaseComponent(correctAnswerText, 'span', 'audio-game__answer-image-transcription').node;\n    correctAnswerTranscription.innerHTML = `${this.correctWordData.word} ${this.correctWordData.transcription}`;\n\n    correctAnswerImage.after(correctAnswerText);\n  }\n\n  showCorrectAnswer(): void {\n    const audioButton = document.querySelector('.audio-game__sound-button');\n    const correctAnswerImage = new BaseComponent(this.gameContainer.node, 'div', 'audio-game__answer-image').node;\n    correctAnswerImage.style.backgroundImage = `url(https://react-learnwords-example.herokuapp.com/${this.correctWordData.image})`;\n\n    audioButton.replaceWith(correctAnswerImage);\n\n    this.createAnswerImageText(correctAnswerImage);\n\n    const nextButton = document.querySelector('.audio-game__button');\n    nextButton.innerHTML = BUTTON_TEXT.next;\n  }\n\n  onVariantClick(info: IVariantInfo): void {\n    this.handleUserClick(info);\n    this.showCorrectAnswer();\n  }\n\n  handleSkipButtonClick(): void {\n    const answer = {\n      meaning: `<strong>${this.correctWordData.word}</strong> - ${this.correctWordData.wordTranslate}`,\n      audio: this.correctWordData.audio,\n    };\n\n    const optionsArray = Array.from(document.querySelectorAll('.level-option'));\n    optionsArray.forEach(option => {\n      if (option.innerHTML === this.correctWordData.wordTranslate) {\n        option.classList.add('correct-answer');\n      }\n    });\n\n    this.userAnswersCount.wrong.push(answer);\n    this.showCorrectAnswer();\n  }\n\n  createWrongResultsList(resultsContainer: HTMLElement): void {\n    this.createTitle(resultsContainer, 'Heправильные ответы', 'h6', 'audio-game__results__wrong-name');\n\n    const wrongAnswersArray: Array<string> = [];\n    this.userAnswersCount.wrong.forEach(item => {\n      wrongAnswersArray.push(item.meaning);\n    });\n\n    const answersCount = new BaseComponent(resultsContainer, 'span', 'wrong-answer__count').node;\n    answersCount.innerText = String(wrongAnswersArray.length);\n\n    const wrongResults = new List(resultsContainer, wrongAnswersArray, info => this.handleSoundButtonClick(\n      this.userAnswersCount.wrong[info.index].audio\n    ));\n    wrongResults.createContainer('audio-game__results__wrong', 'result-word');\n  }\n\n  createTitle(block: HTMLElement, content: string, titleName: string, className: string): void {\n    const title = new BaseComponent(block, titleName, className).node;\n    title.innerHTML = content;\n  }\n\n  createCorrectResultsList(resultsContainer: HTMLElement): void {\n    const correctAnswersArray: Array<string> = [];\n    this.userAnswersCount.correct.forEach(item => {\n      correctAnswersArray.push(item.meaning);\n    });\n\n    this.createTitle(resultsContainer, 'Правильные ответы', 'h6', 'audio-game__results__correct-name');\n\n    const answersCount = new BaseComponent(resultsContainer, 'span', 'correct-answer__count').node;\n    answersCount.innerText = String(correctAnswersArray.length);\n\n    const correctResults = new List(\n      resultsContainer,\n      correctAnswersArray,\n      info => this.handleSoundButtonClick(this.userAnswersCount.correct[info.index].audio)\n    );\n    correctResults.createContainer('audio-game__results__correct', 'result-word');\n  }\n\n  handlePlayAgainButtonClick(): void {\n    this.gameContainer.destroy();\n    this.levelIndex = 0;\n    this.correctWordData = null;\n    this.userAnswersCount = { correct: [], wrong: [] };\n    this.difficultyLevel = null;\n    this.gameStarted = false;\n    this.createContainer();\n  }\n\n  showResults(): void {\n    this.gameContainer.destroy();\n    this.gameContainer = new BaseComponent(this.node, 'div', 'audio-game__results');\n\n    this.createTitle(this.gameContainer.node, 'Аудиовызов', 'h4', 'audio-game__level-name');\n\n    const resultsContainer = new BaseComponent(this.gameContainer.node, 'div', 'audio-game__results-container').node;\n\n    this.createTitle(resultsContainer, 'Результаты', 'h5', 'audio-game__results-name');\n\n    this.createWrongResultsList(resultsContainer);\n    this.createCorrectResultsList(resultsContainer);\n\n    const playAgainButton = new BaseComponent(resultsContainer, 'button', 'audio-game__button', BUTTON_TEXT.again).node;\n    playAgainButton.addEventListener('click', () => this.handlePlayAgainButtonClick());\n\n    const textBookButton = new BaseComponent(resultsContainer, 'button', 'audio-game__button', BUTTON_TEXT.toTextbook).node;\n    textBookButton.addEventListener('click', () => {\n      window.location.href = PAGE_INFO.textbook.hash;\n    });\n  }\n\n  async generateWordsOptions(targetNum: number): Promise<void> {\n    this.wordsData = await this.levelWords.getWordsData(targetNum);\n    this.correctWordData = this.wordsData[this.levelIndex];\n\n    const wordsArray = [];\n    wordsArray.push(this.correctWordData.wordTranslate);\n    this.answers = this.levelWords.generateAnswers(this.wordsData, wordsArray);\n\n    this.levelIndex += 1;\n  }\n\n  async handleActionButtonClick(actionButton: HTMLElement): Promise<void> {\n    if (actionButton.innerHTML === BUTTON_TEXT.skip) {\n      this.handleSkipButtonClick();\n    } else {\n      // eslint-disable-next-line no-lonely-if\n      if (this.levelIndex === 20) {\n        this.showResults();\n      } else {\n        await this.generateWordsOptions(this.difficultyLevel);\n        this.handleStartButtonClick();\n      }\n    }\n  }\n\n  handleSoundButtonClick(url: string): void {\n    const audioObject = new Audio(`https://react-learnwords-example.herokuapp.com/${url}`);\n    audioObject.play();\n  }\n\n  handleStartButtonClick(): void {\n    this.gameContainer.destroy();\n    this.gameContainer = new BaseComponent(this.node, 'div', 'audio-game__level');\n\n    this.createTitle(this.gameContainer.node, 'Аудиовызов', 'h4', 'audio-game__level-name');\n\n    const soundButton = new BaseComponent(this.gameContainer.node, 'button', 'audio-game__sound-button').node;\n    soundButton.addEventListener('click', () => this.handleSoundButtonClick(this.correctWordData.audio));\n\n    const levelOptions = new List(this.gameContainer.node, this.answers.sort(), info => this.onVariantClick(info));\n    levelOptions.createContainer('audio-game__level-options', 'level-option');\n\n    const actionButton = new BaseComponent(this.gameContainer.node, 'button', 'audio-game__button', BUTTON_TEXT.skip).node;\n    actionButton.addEventListener('click', () => this.handleActionButtonClick(actionButton));\n\n    this.gameStarted = true;\n\n    setTimeout(() => this.handleSoundButtonClick(this.correctWordData.audio), 100);\n  }\n\n  createContainer(): void {\n    this.gameContainer = new BaseComponent(this.node, 'div', 'audio-game');\n\n    this.createTitle(this.gameContainer.node, 'Аудиовызов', 'h1', 'audio-game__name');\n    this.createDescription('Данная игра поможет улучшить ваше восприятие речи на слух');\n\n    const levelText = new BaseComponent(this.gameContainer.node, 'span', 'audio-game__choice').node;\n    levelText.innerHTML = 'Выберите уровень сложности';\n\n    this.levelsList = new List(this.gameContainer.node, DIFFICULTY_LEVELS, level => this.onLevelClick(level));\n    this.levelsList.createContainer('audio-game__level-choice', 'audio-game__level-button');\n\n    const startButton = new BaseComponent(this.gameContainer.node, 'button', 'audio-game__start', BUTTON_TEXT.start).node;\n    startButton.addEventListener('click', () => {\n      if (this.difficultyLevel === null) return;\n      this.handleStartButtonClick();\n    });\n  }\n}\n\nexport default GameWindow;\n","import BaseComponent from 'common-components/base-component';\nimport Page from 'pages/page';\nimport GameWindow from 'pages/audio-call/components/game-wrapper';\nimport 'pages/audio-call/audio-call.scss';\n\nclass AudioCallPage extends Page {\n  constructor(parentNode: HTMLElement, id: string) {\n    super(parentNode, id);\n  }\n\n  protected createMain(): void {\n    const main = new BaseComponent(this.parentNode, 'main', 'main');\n    const mainContainer = new BaseComponent(main.node, 'div', 'container main__container home-container').node;\n    const game = new GameWindow(mainContainer, 'div', 'audio-game__wrapper');\n  }\n}\n\nexport default AudioCallPage;\n","class Data {\n  async getData(page: number, group: number) {\n    const data = await fetch(\n      `https://react-learnwords-example.herokuapp.com/words?page=${page}&group=${group}`\n    );\n    const json = await data.json();\n    return json;\n  }\n}\n\nexport default Data;\n","/* eslint-disable max-len */\nimport Data from 'services/api-sprint';\nimport BaseComponent from '../../../common-components/base-component';\nimport { IUserAnswersCount, IWordData } from '../../../types/interfaces';\n\nclass GameView {\n  onTimerFinished: (userAnswersCount: IUserAnswersCount) => void;\n  container: HTMLElement;\n  gameTimer: NodeJS.Timer;\n  timer: number;\n  word: HTMLElement;\n  wordTranslation: HTMLElement;\n  data: Array<IWordData>;\n  randomTranslation: string;\n  correctWordData: IWordData;\n  score: number;\n  points: number;\n  correctSequence: number;\n  userAnswersCount: IUserAnswersCount;\n  levelIndex: number;\n  scoreAmount: HTMLElement;\n  pointsAmount: HTMLElement;\n\n  constructor(container: HTMLElement, data: Array<IWordData>, onTimerFinished: () => void) {\n    this.container = container;\n    this.data = data;\n    this.levelIndex = 0;\n    this.randomTranslation = this.generateRandomTranslation();\n    this.correctWordData = this.data[this.levelIndex];\n    this.word = null;\n    this.wordTranslation = null;\n    this.onTimerFinished = onTimerFinished;\n    this.userAnswersCount = { correct: [], wrong: [] };\n    this.timer = 30;\n    this.points = 10;\n    this.score = 0;\n    this.correctSequence = 0;\n    this.scoreAmount = null;\n    this.pointsAmount = null;\n  }\n\n  updateScore() {\n    if (this.correctSequence === 3) {\n      this.points *= 2;\n      this.correctSequence = 0;\n    }\n    this.score += this.points;\n    this.correctSequence += 1;\n  }\n\n  colorCircles() {\n    const paginationCircles = Array.from(document.querySelectorAll('.pagination-circle'));\n\n    paginationCircles.forEach(circle => {\n      if (paginationCircles.indexOf(circle) < this.correctSequence) {\n        circle.classList.add('correct-answer');\n      } else {\n        circle.classList.remove('correct-answer');\n      }\n    });\n  }\n\n  async generateWordsOptions(page: number, group: number) {\n    const data = new Data();\n    this.data = await data.getData(page, group);\n    this.correctWordData = this.data[this.levelIndex];\n    return this.data;\n  }\n\n  generateRandomTranslation() {\n    const randomTime = Math.trunc(Math.random() * 2);\n    const randomNumber = Math.trunc(Math.random() * 20);\n    this.correctWordData = this.data[this.levelIndex];\n    const randomWord = randomTime === 1 ? this.correctWordData.wordTranslate : this.data[randomNumber].wordTranslate;\n    return randomWord;\n  }\n\n  updateRoundInfo() {\n    this.correctWordData = this.data[this.levelIndex];\n    this.word.innerHTML = this.correctWordData.word;\n    this.randomTranslation = this.generateRandomTranslation();\n    this.wordTranslation.innerHTML = this.randomTranslation;\n    this.scoreAmount.innerHTML = String(this.score);\n    this.pointsAmount.innerHTML = `+${this.points} очков за слово`;\n  }\n\n  async handleUserClick(translation: string, userAnswer: string) {\n    this.levelIndex += 1;\n    const answer = {\n      meaning: `<strong>${this.correctWordData.word}</strong> - ${this.correctWordData.wordTranslate}`,\n      audio: this.correctWordData.audio,\n    };\n    if ((userAnswer === 'верно' && this.correctWordData.wordTranslate === translation) || (userAnswer === 'неверно' && this.correctWordData.wordTranslate !== translation)) {\n      this.updateScore();\n      this.userAnswersCount.correct.push(answer);\n    } else {\n      this.userAnswersCount.wrong.push(answer);\n      this.correctSequence = 0;\n      this.points = 10;\n    }\n    this.colorCircles();\n    this.updateRoundInfo();\n  }\n\n  createAnswers() {\n    this.word = this.createTextLine(this.container, this.correctWordData.word, 'span', 'round-word');\n    this.wordTranslation = this.createTextLine(this.container, this.randomTranslation, 'span', 'round-word-translation');\n  }\n\n  createTimer() {\n    const timerContainer = new BaseComponent(this.container, 'div', 'timer-container').node;\n    const timerCount = new BaseComponent(timerContainer, 'span', 'timer-count').node;\n    if (this.gameTimer) {\n      clearInterval(this.gameTimer);\n    }\n    timerCount.innerHTML = String(this.timer);\n\n    this.gameTimer = setInterval(() => {\n      timerCount.innerHTML = String(this.timer -= 1);\n      if (this.timer === 0) {\n        this.onTimerFinished(this.userAnswersCount);\n        if (this.gameTimer) {\n          clearInterval(this.gameTimer);\n        }\n      }\n    }, 1000);\n  }\n\n  createScoreContainer() {\n    const scoreContainer = new BaseComponent(this.container, 'div', 'score-container').node;\n\n    this.scoreAmount = this.createTextLine(scoreContainer, String(this.score), 'span', 'score-amount');\n\n    const pagination = new BaseComponent(scoreContainer, 'div', 'pagination').node;\n    this.createTextLine(pagination, '', 'span', 'pagination-circle');\n    this.createTextLine(pagination, '', 'span', 'pagination-circle');\n    this.createTextLine(pagination, '', 'span', 'pagination-circle');\n\n    this.pointsAmount = this.createTextLine(scoreContainer, `+${this.points} очков за слово`, 'span', 'points-amount');\n  }\n\n  createTextLine(block: HTMLElement, content: string, titleName: string, className: string) {\n    const title = new BaseComponent(block, titleName, className).node;\n    title.innerHTML = content;\n    return title;\n  }\n}\n\nexport default GameView;\n","import BaseComponent from '../../../common-components/base-component';\nimport { IVariantInfo } from '../../../types/interfaces';\n\nclass List {\n  private listContainer: BaseComponent<HTMLElement>;\n  public parentNode: HTMLElement;\n  public amount: number;\n  public callback: (info: IVariantInfo) => void;\n  public elements: Array<string>;\n  public itemsArray: Array<HTMLElement>;\n\n  constructor(parentNode: HTMLElement, elements: Array<string>, callback: (info: IVariantInfo) => void) {\n    this.parentNode = parentNode;\n    this.elements = elements;\n    this.amount = elements.length;\n    this.callback = callback;\n  }\n\n  createListItem(className: string) {\n    const listItem = new BaseComponent(this.listContainer.node, 'li', className).node;\n    return listItem;\n  }\n\n  onItemClick(mouseEvent: MouseEvent) {\n    const target = mouseEvent.target as HTMLElement;\n\n    if (!(target.closest('li'))) return;\n\n    const itemIndex = this.itemsArray.indexOf(target);\n    const element = this.elements[itemIndex];\n\n    const info: IVariantInfo = {\n      index: itemIndex,\n      label: element,\n      target: mouseEvent.target as HTMLElement\n    };\n\n    if (this.callback !== null) {\n      this.callback(info);\n    }\n  }\n\n  createItems(amount: number, className: string) {\n    this.itemsArray = [];\n\n    for (let i = 0; i < amount; i++) {\n      this.itemsArray.push(this.createListItem(className));\n      this.itemsArray[i].innerHTML = this.elements[i];\n    }\n\n    this.listContainer.node.addEventListener('click', event => this.onItemClick(event));\n  }\n\n  createContainer(className: string, childName: string) {\n    this.listContainer = new BaseComponent(this.parentNode, 'ul', className);\n    this.createItems(this.amount, childName);\n    return this.listContainer;\n  }\n}\n\nexport default List;\n","const DIFFICULTY_LEVELS: Array<string> = ['1', '2', '3', '4', '5', '6'];\nconst BUTTON_TEXT = {\n  start: 'Начать', skip: 'Не знаю', next: 'Дальше', again: 'Сыграть ещё', toTextbook: 'Учебник', wrong: 'неверно', correct: 'верно'\n};\n\nexport { DIFFICULTY_LEVELS, BUTTON_TEXT };\n","/* eslint-disable no-lonely-if */\n/* eslint-disable max-len */\nimport Data from 'services/api-sprint';\nimport GameView from 'pages/sprint/components/game-view';\nimport List from './list';\nimport BaseComponent from '../../../common-components/base-component';\nimport { DIFFICULTY_LEVELS, BUTTON_TEXT } from '../_constants';\nimport { IVariantInfo, IUserAnswersCount, IWordData } from '../../../types/interfaces';\n\nclass GameWindow extends BaseComponent {\n  private gameContainer: BaseComponent<HTMLElement>;\n  levelsList: List;\n  wordsData: Array<IWordData>;\n  answers: Array<string>;\n  levelIndex: number;\n  correctWordData: IWordData;\n  difficultyLevel: number;\n  gameStarted: boolean;\n  gameView: GameView;\n  page: number;\n\n  constructor(parentNode: HTMLElement, tagName: string, className: string) {\n    super(parentNode, tagName, className);\n    this.createContainer();\n    this.addHotKeys();\n    this.correctWordData = null;\n    this.difficultyLevel = null;\n    this.gameStarted = false;\n    this.page = null;\n  }\n\n  addHotKeys() {\n    document.addEventListener('keydown', event => {\n      switch (event.code) {\n        case 'Digit1': this.showSelectedLevel(0);\n          break;\n        case 'Digit2': this.showSelectedLevel(1);\n          break;\n        case 'Digit3': this.showSelectedLevel(2);\n          break;\n        case 'Digit4': this.showSelectedLevel(3);\n          break;\n        case 'Digit5': this.showSelectedLevel(4);\n          break;\n        case 'Digit6': this.showSelectedLevel(5);\n          break;\n      }\n\n      if (event.code === 'ArrowRight') {\n        this.gameView.handleUserClick(this.gameView.randomTranslation, 'верно');\n      }\n\n      if (event.code === 'ArrowLeft') {\n        this.gameView.handleUserClick(this.gameView.randomTranslation, 'неверно');\n      }\n\n      if (event.code === 'Enter' && this.difficultyLevel !== null && this.gameStarted === false) {\n        this.handleButtonClick();\n      }\n    });\n  }\n\n  async generateWordsOptions(page: number, group: number) {\n    const data = new Data();\n    this.wordsData = await data.getData(page, group);\n    this.correctWordData = this.wordsData[this.levelIndex];\n    return this.wordsData;\n  }\n\n  showSelectedLevel(index: number) {\n    this.page = Math.trunc(Math.random() * 30);\n    this.difficultyLevel = index;\n    const selectedLevel = this.levelsList.itemsArray[this.difficultyLevel];\n    this.levelsList.itemsArray.splice(this.difficultyLevel, 1);\n    selectedLevel.classList.add('active-level');\n    this.levelsList.itemsArray.forEach(item => item.classList.add('invisible-level'));\n    this.generateWordsOptions(this.page, this.difficultyLevel);\n  }\n\n  onLevelClick(info: IVariantInfo) {\n    const target = info.target as HTMLElement;\n\n    if (!target.closest('li')) return;\n    this.showSelectedLevel(info.index);\n  }\n\n  createTextLine(block: HTMLElement, content: string, titleName: string, className: string) {\n    const title = new BaseComponent(block, titleName, className).node;\n    title.innerHTML = content;\n  }\n\n  onSoundButtonClick(url: string) {\n    const audioObject = new Audio(`https://react-learnwords-example.herokuapp.com/${url}`);\n    audioObject.play();\n  }\n\n  createWrongResultsList(resultsContainer: HTMLElement, userAnswersCount: IUserAnswersCount) {\n    this.createTextLine(resultsContainer, 'Heправильные ответы', 'h6', 'sprint-game__results__wrong-name');\n\n    const wrongAnswersArray: Array<string> = [];\n    userAnswersCount.wrong.forEach(item => {\n      wrongAnswersArray.push(item.meaning);\n    });\n\n    const answersCount = new BaseComponent(resultsContainer, 'span', 'wrong-answer__count').node;\n    answersCount.innerText = String(wrongAnswersArray.length);\n\n    const wrongResults = new List(resultsContainer, wrongAnswersArray, info => this.onSoundButtonClick(\n      userAnswersCount.wrong[info.index].audio\n    ));\n    wrongResults.createContainer('sprint-game__results__wrong', 'result-word');\n  }\n\n  createCorrectResultsList(resultsContainer: HTMLElement, userAnswersCount: IUserAnswersCount) {\n    this.createTextLine(resultsContainer, 'Правильные ответы', 'h6', 'sprint-game__results__correct-name');\n\n    const correctAnswersArray: Array<string> = [];\n    userAnswersCount.correct.forEach(item => {\n      correctAnswersArray.push(item.meaning);\n    });\n\n    const answersCount = new BaseComponent(resultsContainer, 'span', 'correct-answer__count').node;\n    answersCount.innerText = String(correctAnswersArray.length);\n\n    const correctResults = new List(\n      resultsContainer,\n      correctAnswersArray,\n      info => this.onSoundButtonClick(userAnswersCount.correct[info.index].audio)\n    );\n    correctResults.createContainer('sprint-game__results__correct', 'result-word');\n  }\n\n  onPlayAgainButtonClick() {\n    this.gameContainer.destroy();\n    this.correctWordData = null;\n    this.difficultyLevel = null;\n    this.gameStarted = false;\n    this.createContainer();\n  }\n\n  showResults(userAnswersCount: IUserAnswersCount) {\n    this.gameContainer.destroy();\n    this.gameContainer = new BaseComponent(this.node, 'div', 'sprint-game__results');\n\n    this.createTextLine(this.gameContainer.node, 'Спринт', 'h4', 'sprint-game__level-name');\n\n    const resultsContainer = new BaseComponent(this.gameContainer.node, 'div', 'sprint-game__results-container').node;\n\n    this.createTextLine(resultsContainer, 'Результаты', 'h5', 'sprint-game__results-name');\n    this.createTextLine(resultsContainer, `Набрано ${this.gameView.score} очков`, 'h5', 'game-total');\n\n    this.createWrongResultsList(resultsContainer, userAnswersCount);\n    this.createCorrectResultsList(resultsContainer, userAnswersCount);\n\n    const buttonsContainer = new BaseComponent(resultsContainer, 'div', 'buttons-container').node;\n\n    const playAgainButton = new BaseComponent(buttonsContainer, 'button', 'sprint-game__button', BUTTON_TEXT.again).node;\n    playAgainButton.addEventListener('click', () => this.onPlayAgainButtonClick());\n\n    const textBookButton = new BaseComponent(buttonsContainer, 'button', 'sprint-game__button', BUTTON_TEXT.toTextbook).node;\n    textBookButton.addEventListener('click', () => {\n      window.location.href = '#textbook';\n    });\n  }\n\n  handleButtonClick() {\n    if (!this.gameStarted) {\n      this.gameContainer.destroy();\n      this.gameContainer = new BaseComponent(this.node, 'div', 'sprint-game__level');\n      this.createTextLine(this.gameContainer.node, 'Спринт', 'h4', 'sprint-game__level-name');\n      this.gameView = new GameView(this.gameContainer.node, this.wordsData, () => this.showResults(this.gameView.userAnswersCount));\n      this.gameView.createScoreContainer();\n      this.gameView.createTimer();\n      this.gameView.createAnswers();\n\n      const buttonsContainer = new BaseComponent(this.gameContainer.node, 'div', 'buttons-container');\n\n      const wrongButton = new BaseComponent(buttonsContainer.node, 'button', 'sprint-game__button wrong-answer', BUTTON_TEXT.wrong).node;\n      wrongButton.addEventListener('click', () => this.gameView.handleUserClick(this.gameView.randomTranslation, wrongButton.innerHTML));\n\n      const correctButton = new BaseComponent(buttonsContainer.node, 'button', 'sprint-game__button  correct-answer', BUTTON_TEXT.correct).node;\n      correctButton.addEventListener('click', () => this.gameView.handleUserClick(this.gameView.randomTranslation, correctButton.innerHTML));\n\n      this.gameStarted = true;\n    } else {\n      this.gameView.updateRoundInfo();\n    }\n  }\n\n  createContainer() {\n    this.gameContainer = new BaseComponent(this.node, 'div', 'sprint-game');\n\n    this.createTextLine(this.gameContainer.node, 'Спринт', 'h1', 'game__name');\n    this.createTextLine(this.gameContainer.node, 'Данная игра тренирует навык быстрого перевода', 'p', 'sprint-game__description');\n\n    const levelText = new BaseComponent(this.gameContainer.node, 'span', 'sprint-game__choice').node;\n    levelText.innerHTML = 'Выберите уровень сложности';\n\n    this.levelsList = new List(this.gameContainer.node, DIFFICULTY_LEVELS, level => this.onLevelClick(level));\n    this.levelsList.createContainer('sprint-game__level-choice', 'sprint-game__level-button');\n\n    const startButton = new BaseComponent(this.gameContainer.node, 'button', 'sprint-game__start', BUTTON_TEXT.start).node;\n    startButton.addEventListener('click', () => {\n      if (this.difficultyLevel === null) return;\n      this.handleButtonClick();\n    });\n  }\n}\n\nexport default GameWindow;\n","import BaseComponent from 'common-components/base-component';\nimport Page from 'pages/page';\nimport GameWindow from 'pages/sprint/components/game-window';\nimport 'pages/sprint/sprint.scss';\n\nclass SprintPage extends Page {\n  constructor(parentNode: HTMLElement, id: string) {\n    super(parentNode, id);\n  }\n\n  protected createMain(): void {\n    const main = new BaseComponent(this.parentNode, 'main', 'main');\n    const mainContainer = new BaseComponent(main.node, 'div', 'container main__container home-container').node;\n    const game = new GameWindow(mainContainer, 'div', 'game__wrapper');\n  }\n}\n\nexport default SprintPage;\n","export const CARD__CONTENT: string[] = ['количество новых слов: 0', 'правильных ответов: 0%', 'количество изученных слов: 0'];\n","import BaseComponent from 'common-components/base-component';\nimport Page from 'pages/page';\nimport { CARD__CONTENT } from './_constants';\nimport 'pages/statistics/statistics.scss';\nimport { makeActive, makeInactive } from 'utils/secondary-functions';\n\nclass StatisticsPage extends Page {\n  shortStatsWrapper: BaseComponent<HTMLElement>;\n  toggleNav: boolean;\n  constructor(parentNode: HTMLElement, id: string) {\n    super(parentNode, id);\n    this.toggleNav = false;\n  }\n\n  createTitle(node: HTMLElement) {\n    const title = new BaseComponent(node, 'div', 'statistics__title', 'Статистика');\n  }\n\n  createNav(node: HTMLElement) {\n    const navWrapper = new BaseComponent(node, 'div', 'statistics__nav').node;\n    const navShortInfo = new BaseComponent(navWrapper, 'div', 'statistics__nav-link active', 'Краткосрочная');\n    const navLongInfo = new BaseComponent(navWrapper, 'div', 'statistics__nav-link', 'Долгосрочная');\n    navLongInfo.node.addEventListener('click', () => {\n      if (!this.toggleNav) {\n        this.shortStatsWrapper.destroy();\n        this.createSubtitle(node, 'Ошибка, недостаточно данных для графиков');\n        makeActive(navLongInfo.node);\n        makeInactive(navShortInfo.node);\n        this.toggleNav = true;\n      }\n    });\n    navShortInfo.node.addEventListener('click', () => {\n      this.startPageRefreshCycle();\n      if (this.toggleNav) {\n        makeActive(navShortInfo.node);\n        makeInactive(navLongInfo.node);\n        this.toggleNav = false;\n      }\n    });\n  }\n\n  createSubtitle(node: HTMLElement, text: string) {\n    const subtitle = new BaseComponent(node, 'div', 'statistics__subtitle', `${text}`);\n  }\n\n  createCard(node: HTMLElement, name: string) {\n    const cardWrapper = new BaseComponent(node, 'div', 'statistics__item').node;\n    const cardName = new BaseComponent(cardWrapper, 'div', 'statistics__name', `${name}`);\n    CARD__CONTENT.forEach(cardContent => {\n      const itemPoint = new BaseComponent(cardWrapper, 'div', 'statistics__item-point').node;\n      const icon = new BaseComponent(itemPoint, 'div', 'statistics__item-icon');\n      const text = new BaseComponent(itemPoint, 'div', 'statistics__item-text', `${cardContent}`);\n    });\n  }\n\n  createaStatGame(node: HTMLElement) {\n    const statGameWrapper = new BaseComponent(node, 'div', 'statistics__by-game').node;\n    this.createCard(statGameWrapper, 'Аудиовызов');\n    this.createCard(statGameWrapper, 'Спринт');\n  }\n\n  createStatWords(node: HTMLElement) {\n    const statGameWrapper = new BaseComponent(node, 'div', 'statistics__by-words').node;\n    this.createCard(statGameWrapper, '');\n  }\n\n  createShortStats(node: HTMLElement) {\n    this.shortStatsWrapper = new BaseComponent(node, 'div', 'scroll');\n    this.createSubtitle(this.shortStatsWrapper.node, 'По мини-играм за день');\n    this.createaStatGame(this.shortStatsWrapper.node);\n    this.createSubtitle(this.shortStatsWrapper.node, 'По словам за день');\n    this.createStatWords(this.shortStatsWrapper.node);\n  }\n\n  protected createMain(): void {\n    this.main = new BaseComponent(this.parentNode, 'main', 'main');\n    const mainContainer = new BaseComponent(this.main.node, 'div', 'container main__container home-container').node;\n    this.createTitle(mainContainer);\n    this.createNav(mainContainer);\n    this.createShortStats(mainContainer);\n    this.header.node.after(this.main.node);\n  }\n}\n\nexport default StatisticsPage;\n","const DEVELOPERS_DATA = [\r\n  {\r\n    name: 'Сергей Гуль',\r\n    githubName: 'ckachok',\r\n    role: 'Лидер команды',\r\n    contribution: `<b>Вклад в проект:</b> Разработал дизайн и архитектуру приложения. Координировал работу команды.\r\n                   Создал и настроил навигацию по страницам приложения, а также авторизацию и регистрацию пользователей.\r\n                   Занимался разработкой следующих страниц - “Главная”, “О команде”.\r\n                   Принял участие в разработке страницы “Электронного учебника”.`\r\n  },\r\n  {\r\n    name: 'Валерия Каримова',\r\n    githubName: 'valeriakarimova',\r\n    role: 'Разработчик',\r\n    contribution: `<b>Вклад в проект:</b> Сверстала страницы - “Главная”, “Аудиовызов”, “Спринт”.\r\n                   Занималась полной разработкой логики и функциональности мини-игр приложения - “Аудиовызов” и “Спринт”.\r\n                   Продумала возможность двусторонней связи мини-игр с электронным учебником.`\r\n  },\r\n  {\r\n    name: 'Петров Александр',\r\n    githubName: 'k1ndum',\r\n    role: 'Разработчик',\r\n    contribution: `<b>Вклад в проект:</b> Сверстал страницы - “Электронный учебник” и “Статистика”.\r\n                   Создал и настроил функциональность основных компонентов учебника.\r\n                   Продумал возможность двусторонней связи учебника с мини-играми.\r\n                   Реализовал компоненты страницы “Статистика”.`\r\n  },\r\n];\r\n\r\nexport default DEVELOPERS_DATA;\r\n","import BaseComponent from 'common-components/base-component';\r\nimport DEVELOPERS_DATA from 'pages/about-team/components/developer/_constants';\r\nimport { GITHUB_HREF } from 'common-components/footer/_constants';\r\nimport { IDeveloperData } from 'types/interfaces';\r\nimport 'pages/about-team/components/developer/developer.scss';\r\n\r\nclass Developer extends BaseComponent {\r\n  private devInfo: HTMLElement;\r\n\r\n  constructor(parentNode: HTMLElement, tagName: string, className: string, devData: IDeveloperData) {\r\n    super(parentNode, tagName, className);\r\n    this.createDeveloper(devData);\r\n  }\r\n\r\n  private createDevName(devData: IDeveloperData) {\r\n    const devName = new BaseComponent<HTMLAnchorElement>(this.devInfo, 'a', 'developer__name', devData.name);\r\n    devName.node.href = GITHUB_HREF + devData.githubName;\r\n    devName.node.target = '_blank';\r\n  }\r\n\r\n  private createDevContribution(devData: IDeveloperData) {\r\n    const devContribution = new BaseComponent(this.devInfo, 'p', 'developer__contribution');\r\n    devContribution.node.innerHTML = devData.contribution;\r\n  }\r\n\r\n  private createDeveloperInfo(devData: IDeveloperData) {\r\n    this.devInfo = new BaseComponent(this.node, 'div', 'developer__info').node;\r\n    this.createDevName(devData);\r\n    const devRole = new BaseComponent(this.devInfo, 'p', 'developer__role', devData.role);\r\n    this.createDevContribution(devData);\r\n  }\r\n\r\n  private createDeveloper(devData: IDeveloperData) {\r\n    this.createDeveloperInfo(devData);\r\n    const developerPhoto = new BaseComponent(this.node, 'div', 'developer__photo').node;\r\n\r\n    if (devData.name === DEVELOPERS_DATA[1].name) { //! поменять местами описание и фото\r\n      this.node.insertBefore(developerPhoto, this.devInfo);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Developer;\r\n","import BaseComponent from 'common-components/base-component';\nimport Page from 'pages/page';\nimport Developer from 'pages/about-team/components/developer/developer';\nimport PAGE_INFO from 'pages/_constants';\nimport DEVELOPERS_DATA from 'pages/about-team/components/developer/_constants';\nimport 'pages/about-team/about-team.scss';\n\nclass AboutTeamPage extends Page {\n  constructor(parentNode: HTMLElement, id: string) {\n    super(parentNode, id);\n  }\n\n  private createDevelopers(parentNode: HTMLElement) {\n    DEVELOPERS_DATA.forEach(devData => {\n      const developer = new Developer(parentNode, 'div', 'developer', devData);\n    });\n  }\n\n  protected createMain() {\n    this.main = new BaseComponent(this.parentNode, 'main', 'main');\n    const mainContainer = new BaseComponent(this.main.node, 'div', 'container main__container about-team__container').node;\n    const pageTitle = new BaseComponent(mainContainer, 'h2', 'about-team__title', PAGE_INFO.aboutTeam.name);\n    this.createDevelopers(mainContainer);\n  }\n}\n\nexport default AboutTeamPage;\n","import 'normalize.css';\nimport './styles.scss';\nimport App from './app';\nimport { playback } from 'pages/textbook/components/card/card';\n\nconst app = new App();\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  app.router();\n});\n\nwindow.addEventListener('hashchange', () => {\n  playback.pause();\n  app.router();\n});\n","import HomePage from 'pages/home/home';\nimport TextbookPage from 'pages/textbook/textbook';\nimport AudioCallPage from 'pages/audio-call/audio-call';\nimport SprintPage from 'pages/sprint/sprint';\nimport StatisticsPage from 'pages/statistics/statistics';\nimport AboutTeamPage from 'pages/about-team/about-team';\nimport PAGE_INFO from 'pages/_constants';\n\nclass App {\n  public container: HTMLElement;\n\n  constructor() {\n    this.container = document.body;\n  }\n\n  public router(): void {\n    if (this.container.innerHTML) {\n      this.container.innerHTML = '';\n    }\n\n    const routes = [\n      { hash: PAGE_INFO.home.hash, id: PAGE_INFO.home.id, View: HomePage },\n      { hash: PAGE_INFO.textbook.hash, id: PAGE_INFO.textbook.id, View: TextbookPage },\n      { hash: PAGE_INFO.audioCall.hash, id: PAGE_INFO.audioCall.id, View: AudioCallPage },\n      { hash: PAGE_INFO.sprint.hash, id: PAGE_INFO.sprint.id, View: SprintPage },\n      { hash: PAGE_INFO.statistics.hash, id: PAGE_INFO.statistics.id, View: StatisticsPage },\n      { hash: PAGE_INFO.aboutTeam.hash, id: PAGE_INFO.aboutTeam.id, View: AboutTeamPage }\n    ];\n\n    const defaultRoute = routes[0];\n    const currDefinedRoute = routes.find(route => window.location.hash.includes(route.hash));\n    const currRoute = currDefinedRoute || defaultRoute;\n\n    const currPage = new currRoute.View(this.container, currRoute.id);\n  }\n}\n\nexport default App;\n"],"names":["parentNode","tagName","className","content","element","document","createElement","textContent","append","this","node","destroy","remove","home","name","hash","id","textbook","audioCall","sprint","statistics","aboutTeam","createLogo","href","STORAGE_USER_KEYS","getTextbookStore","curDifficultyLevel","localStorage","getItem","curPageNumber","totalPageCount","makeActive","elements","forEach","elem","classList","add","makeInactive","createHeader","createUserWelcome","userName","welcome","innerHTML","createUserButtons","buttonsContainer","authBtn","deAuthBtn","handleAuthBtnClick","addEventListener","setTimeout","onAuthButton","handleDeAuthBtnClick","key","removeItem","window","location","createUser","user","showHideMenu","burgerMenu","contains","menu","handleBurgerMenuClick","onBurgerMenu","createBurgerMenu","highlightActiveMenuLink","menuLink","menuItemData","currPageHash","createMenuList","menuList","Object","values","menuItem","createMenu","headerContainer","target","GITHUB_NAMES","GITHUB_HREF","createFooter","createDevInfo","devInfo","developers","developerName","footerContainer","handleCoverClick","onCover","BASE","ENDPOINT","ERROR","token","refreshToken","getWords","group","page","fetch","json","getWord","registerNewUser","userData","method","headers","Accept","body","JSON","stringify","resp","status","error","success","authorizeUser","getNewUserToken","userId","Authorization","newTokens","setItem","getUser","ApiLearnWords","createUserWord","wordId","wordData","getUserWord","difficulty","data","optional","updateUserWord","deleteUserWord","updateUserWordData","userWordData","isLearned","isNew","saveUserWord","getAllUserWords","getAggregatedWords","filter","wordsPerPage","set","paginatedResults","count","totalCount","getAggregatedWord","FIELD_DATA","type","pattern","title","required","createAuthorization","handleAuthSwitchBtnClick","authSwitchButton","authSubmitButton","regSwitchButton","inputUserName","parentElement","regSubmitButton","message","handleRegSwitchBtnClick","createAuthorizationControls","controls","createFormField","map","field","fieldInput","inputEmail","inputPassword","getFormFieldValues","value","email","password","isInputFieldsValid","isUserNameValid","validity","valid","isEmailValid","isPasswordValid","performUserRegistration","userRegRequest","handleRegSubmitBtnClick","event","preventDefault","performUserAuthorization","userAuthRequest","storageUserData","authToken","authRefreshToken","userAuthData","handleAuthSubmitBtnClick","createAuthorizationForm","form","header","createMain","footer","cover","authorization","startMenuInteractionCycle","startUserAuthorizationCycle","startCoverInteractionCycle","toggle","startPageRefreshCycle","main","feature","createFeatureApp","featureNameContainer","featureDesc","desc","createAppFeatures","item","createDecorativeCircles","mainContainer","LEVEL_NAMES","TEXTBOOK_GAMES","createTextbookMenu","handleLevelItemClick","levelItem","indexLevel","curLevelItem","toString","onLevelItem","createLevelsNav","store","levelsNav","index","length","createGamesNav","gamesNav","gameLinkData","createPagesCounter","counter","currPageNumber","handleHashChange","playback","Audio","createCard","handleCardSoundClick","cardSound","pause","playList","audio","audioMeaning","audioExample","src","play","current","createCardImage","cardImage","style","backgroundImage","image","cardAnswers","incorrectAnswer","countCorrect","correctAnswer","countWrong","createWordControlBtns","compound","learned","pointerEvents","createWord","wordContainer","word","wordTranslate","transcription","createDefinition","defContainer","textMeaning","textMeaningTranslate","createExample","exampleContainer","textExample","textExampleTranslate","handleNextPageClick","nextPage","storeTextbook","textbookMenu","handlePrevPageClick","prevPage","createPageSwitches","switchesContainer","createCards","cardsContainer","words","after","callback","amount","createListItem","listContainer","onItemClick","mouseEvent","closest","itemIndex","itemsArray","indexOf","info","label","createItems","i","push","createContainer","childName","DIFFICULTY_LEVELS","BUTTON_TEXT","getData","generateRandomNumber","Math","trunc","random","getWordsData","num","generateAnswers","answersArray","newWord","includes","levelWords","addHotKeys","levelIndex","correctWordData","userAnswersCount","correct","wrong","difficultyLevel","gameStarted","getVariantInfo","variantsArray","Array","from","querySelectorAll","innerText","event1","code","showSelectedLevel","onVariantClick","handleSoundButtonClick","gameButton","querySelector","handleActionButtonClick","handleStartButtonClick","createDescription","text","gameContainer","onLevelClick","levelsList","splice","generateWordsOptions","handleUserClick","userAnswer","answer","meaning","createAnswerImageText","correctAnswerImage","correctAnswerText","showCorrectAnswer","audioButton","replaceWith","handleSkipButtonClick","option","createWrongResultsList","resultsContainer","createTitle","wrongAnswersArray","String","block","titleName","createCorrectResultsList","correctAnswersArray","handlePlayAgainButtonClick","showResults","targetNum","wordsData","wordsArray","answers","actionButton","url","sort","level","container","onTimerFinished","randomTranslation","generateRandomTranslation","wordTranslation","timer","points","score","correctSequence","scoreAmount","pointsAmount","updateScore","colorCircles","paginationCircles","circle","randomTime","randomNumber","updateRoundInfo","translation","createAnswers","createTextLine","createTimer","timerContainer","timerCount","gameTimer","clearInterval","setInterval","createScoreContainer","scoreContainer","pagination","gameView","handleButtonClick","selectedLevel","onSoundButtonClick","onPlayAgainButtonClick","CARD__CONTENT","toggleNav","createNav","navWrapper","navShortInfo","navLongInfo","shortStatsWrapper","createSubtitle","cardWrapper","cardContent","itemPoint","createaStatGame","statGameWrapper","createStatWords","createShortStats","githubName","role","contribution","devData","createDeveloper","createDevName","devName","createDevContribution","createDeveloperInfo","developerPhoto","insertBefore","createDevelopers","router","routes","View","defaultRoute","currRoute","find","route"],"sourceRoot":""}